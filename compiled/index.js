module.exports=(()=>{var __webpack_modules__={6821:(e,r,t)=>{"use strict";t.r(r);var s=t(5438);var o=t(1672);var n=t(2186);var i=t(5375);var a=undefined&&undefined.__awaiter||function(e,r,t,s){function adopt(e){return e instanceof t?e:new t(function(r){r(e)})}return new(t||(t=Promise))(function(t,o){function fulfilled(e){try{step(s.next(e))}catch(e){o(e)}}function rejected(e){try{step(s["throw"](e))}catch(e){o(e)}}function step(e){e.done?t(e.value):adopt(e.value).then(fulfilled,rejected)}step((s=s.apply(e,r||[])).next())})};const c="dti-github-bot";const p=()=>{const e=s.context.payload.pull_request;if(e==null){throw new Error("The action must be used in a PR context!")}return{number:e.number,owner:e.head.repo.owner.login,repo:e.head.repo.name,authorLogin:e.user.login}};const l=e=>new i.v({auth:`token ${e}`,userAgent:"cornell-dti/big-diff-warning"});const u=e=>a(void 0,void 0,void 0,function*(){const{owner:r,repo:t,number:s}=p();const o=l(e);const{data:n}=yield o.pulls.get({owner:r,repo:t,pull_number:s,headers:{accept:"application/vnd.github.v3.diff"}});return n});const d=(e,r,t)=>a(void 0,void 0,void 0,function*(){const{owner:s,repo:o,number:n}=p();const i=l(e);const{data:a}=yield i.issues.listComments({owner:s,repo:o,issue_number:n});const u=a.find(e=>e.user.login===c&&e.body.startsWith(r));const d=`${r} ${t}`;if(u==null){yield i.issues.createComment({owner:s,repo:o,issue_number:n,body:d});return}yield i.issues.updateComment({owner:s,repo:o,comment_id:u.id,body:d})});const m=()=>{const{authorLogin:e}=p();return["meganyin13","JBoss925","chansen424"].filter(r=>r!=e)};const f=e=>a(void 0,void 0,void 0,function*(){const{owner:r,repo:t,number:s}=p();const o=l(e);const n=m().map(e=>a(void 0,void 0,void 0,function*(){try{yield o.pulls.createReviewRequest({owner:r,repo:t,pull_number:s,reviewers:[e]})}catch(e){console.warn(e.message)}}));yield Promise.all(n)});const g=["yarn.lock","package.json","package-lock.json","pubspec.lock","pubspec.yaml","Podfile","Podfile.lock","build.gradle","Pods/",".snap",".svg","tsconfig.json",".eslintrc.json",".eslintrc.js",".eslintrc",".gitignore"];const h=e=>{if(process.env.JEST_WORKER_ID===undefined){console.log(e)}};const T=e=>g.find(r=>e.includes(r))!=null;const w=({oldFileName:e,newFileName:r})=>e!=null&&T(e)||r!=null&&T(r);const E=({addStatistics:e,deleteStatistics:r})=>{const t=new Map;const s=new Map(r);e.forEach((e,r)=>{const o=s.get(r);if(o==null){t.set(r,e);return}if(e===o){s.delete(r)}else if(e>o){t.set(r,e-o);s.delete(r)}else{s.set(r,o-e)}});return{addStatistics:t,deleteStatistics:s}};const b=({oldFileName:e,newFileName:r,hunks:t})=>{const s=e!==null&&e!==void 0?e:"/dev/null";const o=r!==null&&r!==void 0?r:"/dev/null";let n=new Map;let i=new Map;if(o==="/dev/null"){h(`Detected deleted file: ${s} => ${o}`);return{oldFileName:s,newFileName:o,addStatistics:n,deleteStatistics:i}}const a=t.flatMap(e=>e.lines);const c=[];const p=[];const l=e=>e.trim().replace(/\s/g,"").replace(/['";,]/g,"");a.forEach(e=>{switch(e[0]){case"+":c.push(l(e.substring(1)));break;case"-":p.push(l(e.substring(1)));break;default:break}});c.forEach(e=>{var r;n.set(e,((r=n.get(e))!==null&&r!==void 0?r:0)+1)});p.forEach(e=>{var r;i.set(e,((r=i.get(e))!==null&&r!==void 0?r:0)+1)});const u=E({addStatistics:n,deleteStatistics:i});n=u.addStatistics;i=u.deleteStatistics;const{added:d,deleted:m}=y({addStatistics:n,deleteStatistics:i});h(`Changed file (${s} => ${o}): added: ${d}, deleted: ${m}`);return{oldFileName:s,newFileName:o,addStatistics:n,deleteStatistics:i}};const v=e=>{const r=new Map;const t=new Map;e.forEach(({addStatistics:e,deleteStatistics:s})=>{e.forEach((e,t)=>{var s;r.set(t,((s=r.get(t))!==null&&s!==void 0?s:0)+e)});s.forEach((e,r)=>{var s;t.set(r,((s=t.get(r))!==null&&s!==void 0?s:0)+e)})});return{addStatistics:r,deleteStatistics:t}};const y=({addStatistics:e,deleteStatistics:r})=>({added:Array.from(e.values()).reduce((e,r)=>e+r,0),deleted:Array.from(r.values()).reduce((e,r)=>e+r,0)});const _=e=>{const r=o.G8(e);const t=r.filter(e=>!w(e)).map(b);const s=v(t);const{added:n,deleted:i}=y(E(s));h(`Total added: ${n}, total deleted: ${i}.`);return n+i};var P=undefined&&undefined.__awaiter||function(e,r,t,s){function adopt(e){return e instanceof t?e:new t(function(r){r(e)})}return new(t||(t=Promise))(function(t,o){function fulfilled(e){try{step(s.next(e))}catch(e){o(e)}}function rejected(e){try{step(s["throw"](e))}catch(e){o(e)}}function step(e){e.done?t(e.value):adopt(e.value).then(fulfilled,rejected)}step((s=s.apply(e,r||[])).next())})};const O=1e3;const S=()=>P(void 0,void 0,void 0,function*(){const e=process.env.BOT_TOKEN;if(!e){throw new Error("Environment variable BOT_TOKEN must be set!")}const r=yield u(e);let t=_(r);let s=`Significant lines: ${t}.`;if(t>O){s+=" This diff might be too big! Developer leads are invited to review the code.";f(e)}d(e,"[diff-counting]",s)});(()=>P(void 0,void 0,void 0,function*(){try{yield S()}catch(e){n.setFailed(e.message)}}))()},7351:function(e,r,t){"use strict";var s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var r={};if(e!=null)for(var t in e)if(Object.hasOwnProperty.call(e,t))r[t]=e[t];r["default"]=e;return r};Object.defineProperty(r,"__esModule",{value:true});const o=s(t(2087));const n=t(5278);function issueCommand(e,r,t){const s=new Command(e,r,t);process.stdout.write(s.toString()+o.EOL)}r.issueCommand=issueCommand;function issue(e,r=""){issueCommand(e,{},r)}r.issue=issue;const i="::";class Command{constructor(e,r,t){if(!e){e="missing.command"}this.command=e;this.properties=r;this.message=t}toString(){let e=i+this.command;if(this.properties&&Object.keys(this.properties).length>0){e+=" ";let r=true;for(const t in this.properties){if(this.properties.hasOwnProperty(t)){const s=this.properties[t];if(s){if(r){r=false}else{e+=","}e+=`${t}=${escapeProperty(s)}`}}}}e+=`${i}${escapeData(this.message)}`;return e}}function escapeData(e){return n.toCommandValue(e).replace(/%/g,"%25").replace(/\r/g,"%0D").replace(/\n/g,"%0A")}function escapeProperty(e){return n.toCommandValue(e).replace(/%/g,"%25").replace(/\r/g,"%0D").replace(/\n/g,"%0A").replace(/:/g,"%3A").replace(/,/g,"%2C")}},2186:function(e,r,t){"use strict";var s=this&&this.__awaiter||function(e,r,t,s){function adopt(e){return e instanceof t?e:new t(function(r){r(e)})}return new(t||(t=Promise))(function(t,o){function fulfilled(e){try{step(s.next(e))}catch(e){o(e)}}function rejected(e){try{step(s["throw"](e))}catch(e){o(e)}}function step(e){e.done?t(e.value):adopt(e.value).then(fulfilled,rejected)}step((s=s.apply(e,r||[])).next())})};var o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var r={};if(e!=null)for(var t in e)if(Object.hasOwnProperty.call(e,t))r[t]=e[t];r["default"]=e;return r};Object.defineProperty(r,"__esModule",{value:true});const n=t(7351);const i=t(717);const a=t(5278);const c=o(t(2087));const p=o(t(5622));var l;(function(e){e[e["Success"]=0]="Success";e[e["Failure"]=1]="Failure"})(l=r.ExitCode||(r.ExitCode={}));function exportVariable(e,r){const t=a.toCommandValue(r);process.env[e]=t;const s=process.env["GITHUB_ENV"]||"";if(s){const r="_GitHubActionsFileCommandDelimeter_";const s=`${e}<<${r}${c.EOL}${t}${c.EOL}${r}`;i.issueCommand("ENV",s)}else{n.issueCommand("set-env",{name:e},t)}}r.exportVariable=exportVariable;function setSecret(e){n.issueCommand("add-mask",{},e)}r.setSecret=setSecret;function addPath(e){const r=process.env["GITHUB_PATH"]||"";if(r){i.issueCommand("PATH",e)}else{n.issueCommand("add-path",{},e)}process.env["PATH"]=`${e}${p.delimiter}${process.env["PATH"]}`}r.addPath=addPath;function getInput(e,r){const t=process.env[`INPUT_${e.replace(/ /g,"_").toUpperCase()}`]||"";if(r&&r.required&&!t){throw new Error(`Input required and not supplied: ${e}`)}return t.trim()}r.getInput=getInput;function setOutput(e,r){n.issueCommand("set-output",{name:e},r)}r.setOutput=setOutput;function setCommandEcho(e){n.issue("echo",e?"on":"off")}r.setCommandEcho=setCommandEcho;function setFailed(e){process.exitCode=l.Failure;error(e)}r.setFailed=setFailed;function isDebug(){return process.env["RUNNER_DEBUG"]==="1"}r.isDebug=isDebug;function debug(e){n.issueCommand("debug",{},e)}r.debug=debug;function error(e){n.issue("error",e instanceof Error?e.toString():e)}r.error=error;function warning(e){n.issue("warning",e instanceof Error?e.toString():e)}r.warning=warning;function info(e){process.stdout.write(e+c.EOL)}r.info=info;function startGroup(e){n.issue("group",e)}r.startGroup=startGroup;function endGroup(){n.issue("endgroup")}r.endGroup=endGroup;function group(e,r){return s(this,void 0,void 0,function*(){startGroup(e);let t;try{t=yield r()}finally{endGroup()}return t})}r.group=group;function saveState(e,r){n.issueCommand("save-state",{name:e},r)}r.saveState=saveState;function getState(e){return process.env[`STATE_${e}`]||""}r.getState=getState},717:function(e,r,t){"use strict";var s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var r={};if(e!=null)for(var t in e)if(Object.hasOwnProperty.call(e,t))r[t]=e[t];r["default"]=e;return r};Object.defineProperty(r,"__esModule",{value:true});const o=s(t(5747));const n=s(t(2087));const i=t(5278);function issueCommand(e,r){const t=process.env[`GITHUB_${e}`];if(!t){throw new Error(`Unable to find environment variable for file command ${e}`)}if(!o.existsSync(t)){throw new Error(`Missing file at path: ${t}`)}o.appendFileSync(t,`${i.toCommandValue(r)}${n.EOL}`,{encoding:"utf8"})}r.issueCommand=issueCommand},5278:(e,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});function toCommandValue(e){if(e===null||e===undefined){return""}else if(typeof e==="string"||e instanceof String){return e}return JSON.stringify(e)}r.toCommandValue=toCommandValue},4087:(e,r,t)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.Context=void 0;const s=t(5747);const o=t(2087);class Context{constructor(){this.payload={};if(process.env.GITHUB_EVENT_PATH){if(s.existsSync(process.env.GITHUB_EVENT_PATH)){this.payload=JSON.parse(s.readFileSync(process.env.GITHUB_EVENT_PATH,{encoding:"utf8"}))}else{const e=process.env.GITHUB_EVENT_PATH;process.stdout.write(`GITHUB_EVENT_PATH ${e} does not exist${o.EOL}`)}}this.eventName=process.env.GITHUB_EVENT_NAME;this.sha=process.env.GITHUB_SHA;this.ref=process.env.GITHUB_REF;this.workflow=process.env.GITHUB_WORKFLOW;this.action=process.env.GITHUB_ACTION;this.actor=process.env.GITHUB_ACTOR;this.job=process.env.GITHUB_JOB;this.runNumber=parseInt(process.env.GITHUB_RUN_NUMBER,10);this.runId=parseInt(process.env.GITHUB_RUN_ID,10)}get issue(){const e=this.payload;return Object.assign(Object.assign({},this.repo),{number:(e.issue||e.pull_request||e).number})}get repo(){if(process.env.GITHUB_REPOSITORY){const[e,r]=process.env.GITHUB_REPOSITORY.split("/");return{owner:e,repo:r}}if(this.payload.repository){return{owner:this.payload.repository.owner.login,repo:this.payload.repository.name}}throw new Error("context.repo requires a GITHUB_REPOSITORY environment variable like 'owner/repo'")}}r.Context=Context},5438:function(e,r,t){"use strict";var s=this&&this.__createBinding||(Object.create?function(e,r,t,s){if(s===undefined)s=t;Object.defineProperty(e,s,{enumerable:true,get:function(){return r[t]}})}:function(e,r,t,s){if(s===undefined)s=t;e[s]=r[t]});var o=this&&this.__setModuleDefault||(Object.create?function(e,r){Object.defineProperty(e,"default",{enumerable:true,value:r})}:function(e,r){e["default"]=r});var n=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var r={};if(e!=null)for(var t in e)if(Object.hasOwnProperty.call(e,t))s(r,e,t);o(r,e);return r};Object.defineProperty(r,"__esModule",{value:true});r.getOctokit=r.context=void 0;const i=n(t(4087));const a=t(3030);r.context=new i.Context;function getOctokit(e,r){return new a.GitHub(a.getOctokitOptions(e,r))}r.getOctokit=getOctokit},7914:function(e,r,t){"use strict";var s=this&&this.__createBinding||(Object.create?function(e,r,t,s){if(s===undefined)s=t;Object.defineProperty(e,s,{enumerable:true,get:function(){return r[t]}})}:function(e,r,t,s){if(s===undefined)s=t;e[s]=r[t]});var o=this&&this.__setModuleDefault||(Object.create?function(e,r){Object.defineProperty(e,"default",{enumerable:true,value:r})}:function(e,r){e["default"]=r});var n=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var r={};if(e!=null)for(var t in e)if(Object.hasOwnProperty.call(e,t))s(r,e,t);o(r,e);return r};Object.defineProperty(r,"__esModule",{value:true});r.getApiBaseUrl=r.getProxyAgent=r.getAuthString=void 0;const i=n(t(9925));function getAuthString(e,r){if(!e&&!r.auth){throw new Error("Parameter token or opts.auth is required")}else if(e&&r.auth){throw new Error("Parameters token and opts.auth may not both be specified")}return typeof r.auth==="string"?r.auth:`token ${e}`}r.getAuthString=getAuthString;function getProxyAgent(e){const r=new i.HttpClient;return r.getAgent(e)}r.getProxyAgent=getProxyAgent;function getApiBaseUrl(){return process.env["GITHUB_API_URL"]||"https://api.github.com"}r.getApiBaseUrl=getApiBaseUrl},3030:function(e,r,t){"use strict";var s=this&&this.__createBinding||(Object.create?function(e,r,t,s){if(s===undefined)s=t;Object.defineProperty(e,s,{enumerable:true,get:function(){return r[t]}})}:function(e,r,t,s){if(s===undefined)s=t;e[s]=r[t]});var o=this&&this.__setModuleDefault||(Object.create?function(e,r){Object.defineProperty(e,"default",{enumerable:true,value:r})}:function(e,r){e["default"]=r});var n=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var r={};if(e!=null)for(var t in e)if(Object.hasOwnProperty.call(e,t))s(r,e,t);o(r,e);return r};Object.defineProperty(r,"__esModule",{value:true});r.getOctokitOptions=r.GitHub=r.context=void 0;const i=n(t(4087));const a=n(t(7914));const c=t(6762);const p=t(3044);const l=t(4193);r.context=new i.Context;const u=a.getApiBaseUrl();const d={baseUrl:u,request:{agent:a.getProxyAgent(u)}};r.GitHub=c.Octokit.plugin(p.restEndpointMethods,l.paginateRest).defaults(d);function getOctokitOptions(e,r){const t=Object.assign({},r||{});const s=a.getAuthString(e,t);if(s){t.auth=s}return t}r.getOctokitOptions=getOctokitOptions},9925:(e,r,t)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});const s=t(8605);const o=t(7211);const n=t(6443);let i;var a;(function(e){e[e["OK"]=200]="OK";e[e["MultipleChoices"]=300]="MultipleChoices";e[e["MovedPermanently"]=301]="MovedPermanently";e[e["ResourceMoved"]=302]="ResourceMoved";e[e["SeeOther"]=303]="SeeOther";e[e["NotModified"]=304]="NotModified";e[e["UseProxy"]=305]="UseProxy";e[e["SwitchProxy"]=306]="SwitchProxy";e[e["TemporaryRedirect"]=307]="TemporaryRedirect";e[e["PermanentRedirect"]=308]="PermanentRedirect";e[e["BadRequest"]=400]="BadRequest";e[e["Unauthorized"]=401]="Unauthorized";e[e["PaymentRequired"]=402]="PaymentRequired";e[e["Forbidden"]=403]="Forbidden";e[e["NotFound"]=404]="NotFound";e[e["MethodNotAllowed"]=405]="MethodNotAllowed";e[e["NotAcceptable"]=406]="NotAcceptable";e[e["ProxyAuthenticationRequired"]=407]="ProxyAuthenticationRequired";e[e["RequestTimeout"]=408]="RequestTimeout";e[e["Conflict"]=409]="Conflict";e[e["Gone"]=410]="Gone";e[e["TooManyRequests"]=429]="TooManyRequests";e[e["InternalServerError"]=500]="InternalServerError";e[e["NotImplemented"]=501]="NotImplemented";e[e["BadGateway"]=502]="BadGateway";e[e["ServiceUnavailable"]=503]="ServiceUnavailable";e[e["GatewayTimeout"]=504]="GatewayTimeout"})(a=r.HttpCodes||(r.HttpCodes={}));var c;(function(e){e["Accept"]="accept";e["ContentType"]="content-type"})(c=r.Headers||(r.Headers={}));var p;(function(e){e["ApplicationJson"]="application/json"})(p=r.MediaTypes||(r.MediaTypes={}));function getProxyUrl(e){let r=n.getProxyUrl(new URL(e));return r?r.href:""}r.getProxyUrl=getProxyUrl;const l=[a.MovedPermanently,a.ResourceMoved,a.SeeOther,a.TemporaryRedirect,a.PermanentRedirect];const u=[a.BadGateway,a.ServiceUnavailable,a.GatewayTimeout];const d=["OPTIONS","GET","DELETE","HEAD"];const m=10;const f=5;class HttpClientError extends Error{constructor(e,r){super(e);this.name="HttpClientError";this.statusCode=r;Object.setPrototypeOf(this,HttpClientError.prototype)}}r.HttpClientError=HttpClientError;class HttpClientResponse{constructor(e){this.message=e}readBody(){return new Promise(async(e,r)=>{let t=Buffer.alloc(0);this.message.on("data",e=>{t=Buffer.concat([t,e])});this.message.on("end",()=>{e(t.toString())})})}}r.HttpClientResponse=HttpClientResponse;function isHttps(e){let r=new URL(e);return r.protocol==="https:"}r.isHttps=isHttps;class HttpClient{constructor(e,r,t){this._ignoreSslError=false;this._allowRedirects=true;this._allowRedirectDowngrade=false;this._maxRedirects=50;this._allowRetries=false;this._maxRetries=1;this._keepAlive=false;this._disposed=false;this.userAgent=e;this.handlers=r||[];this.requestOptions=t;if(t){if(t.ignoreSslError!=null){this._ignoreSslError=t.ignoreSslError}this._socketTimeout=t.socketTimeout;if(t.allowRedirects!=null){this._allowRedirects=t.allowRedirects}if(t.allowRedirectDowngrade!=null){this._allowRedirectDowngrade=t.allowRedirectDowngrade}if(t.maxRedirects!=null){this._maxRedirects=Math.max(t.maxRedirects,0)}if(t.keepAlive!=null){this._keepAlive=t.keepAlive}if(t.allowRetries!=null){this._allowRetries=t.allowRetries}if(t.maxRetries!=null){this._maxRetries=t.maxRetries}}}options(e,r){return this.request("OPTIONS",e,null,r||{})}get(e,r){return this.request("GET",e,null,r||{})}del(e,r){return this.request("DELETE",e,null,r||{})}post(e,r,t){return this.request("POST",e,r,t||{})}patch(e,r,t){return this.request("PATCH",e,r,t||{})}put(e,r,t){return this.request("PUT",e,r,t||{})}head(e,r){return this.request("HEAD",e,null,r||{})}sendStream(e,r,t,s){return this.request(e,r,t,s)}async getJson(e,r={}){r[c.Accept]=this._getExistingOrDefaultHeader(r,c.Accept,p.ApplicationJson);let t=await this.get(e,r);return this._processResponse(t,this.requestOptions)}async postJson(e,r,t={}){let s=JSON.stringify(r,null,2);t[c.Accept]=this._getExistingOrDefaultHeader(t,c.Accept,p.ApplicationJson);t[c.ContentType]=this._getExistingOrDefaultHeader(t,c.ContentType,p.ApplicationJson);let o=await this.post(e,s,t);return this._processResponse(o,this.requestOptions)}async putJson(e,r,t={}){let s=JSON.stringify(r,null,2);t[c.Accept]=this._getExistingOrDefaultHeader(t,c.Accept,p.ApplicationJson);t[c.ContentType]=this._getExistingOrDefaultHeader(t,c.ContentType,p.ApplicationJson);let o=await this.put(e,s,t);return this._processResponse(o,this.requestOptions)}async patchJson(e,r,t={}){let s=JSON.stringify(r,null,2);t[c.Accept]=this._getExistingOrDefaultHeader(t,c.Accept,p.ApplicationJson);t[c.ContentType]=this._getExistingOrDefaultHeader(t,c.ContentType,p.ApplicationJson);let o=await this.patch(e,s,t);return this._processResponse(o,this.requestOptions)}async request(e,r,t,s){if(this._disposed){throw new Error("Client has already been disposed.")}let o=new URL(r);let n=this._prepareRequest(e,o,s);let i=this._allowRetries&&d.indexOf(e)!=-1?this._maxRetries+1:1;let c=0;let p;while(c<i){p=await this.requestRaw(n,t);if(p&&p.message&&p.message.statusCode===a.Unauthorized){let e;for(let r=0;r<this.handlers.length;r++){if(this.handlers[r].canHandleAuthentication(p)){e=this.handlers[r];break}}if(e){return e.handleAuthentication(this,n,t)}else{return p}}let r=this._maxRedirects;while(l.indexOf(p.message.statusCode)!=-1&&this._allowRedirects&&r>0){const i=p.message.headers["location"];if(!i){break}let a=new URL(i);if(o.protocol=="https:"&&o.protocol!=a.protocol&&!this._allowRedirectDowngrade){throw new Error("Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.")}await p.readBody();if(a.hostname!==o.hostname){for(let e in s){if(e.toLowerCase()==="authorization"){delete s[e]}}}n=this._prepareRequest(e,a,s);p=await this.requestRaw(n,t);r--}if(u.indexOf(p.message.statusCode)==-1){return p}c+=1;if(c<i){await p.readBody();await this._performExponentialBackoff(c)}}return p}dispose(){if(this._agent){this._agent.destroy()}this._disposed=true}requestRaw(e,r){return new Promise((t,s)=>{let o=function(e,r){if(e){s(e)}t(r)};this.requestRawWithCallback(e,r,o)})}requestRawWithCallback(e,r,t){let s;if(typeof r==="string"){e.options.headers["Content-Length"]=Buffer.byteLength(r,"utf8")}let o=false;let n=(e,r)=>{if(!o){o=true;t(e,r)}};let i=e.httpModule.request(e.options,e=>{let r=new HttpClientResponse(e);n(null,r)});i.on("socket",e=>{s=e});i.setTimeout(this._socketTimeout||3*6e4,()=>{if(s){s.end()}n(new Error("Request timeout: "+e.options.path),null)});i.on("error",function(e){n(e,null)});if(r&&typeof r==="string"){i.write(r,"utf8")}if(r&&typeof r!=="string"){r.on("close",function(){i.end()});r.pipe(i)}else{i.end()}}getAgent(e){let r=new URL(e);return this._getAgent(r)}_prepareRequest(e,r,t){const n={};n.parsedUrl=r;const i=n.parsedUrl.protocol==="https:";n.httpModule=i?o:s;const a=i?443:80;n.options={};n.options.host=n.parsedUrl.hostname;n.options.port=n.parsedUrl.port?parseInt(n.parsedUrl.port):a;n.options.path=(n.parsedUrl.pathname||"")+(n.parsedUrl.search||"");n.options.method=e;n.options.headers=this._mergeHeaders(t);if(this.userAgent!=null){n.options.headers["user-agent"]=this.userAgent}n.options.agent=this._getAgent(n.parsedUrl);if(this.handlers){this.handlers.forEach(e=>{e.prepareRequest(n.options)})}return n}_mergeHeaders(e){const r=e=>Object.keys(e).reduce((r,t)=>(r[t.toLowerCase()]=e[t],r),{});if(this.requestOptions&&this.requestOptions.headers){return Object.assign({},r(this.requestOptions.headers),r(e))}return r(e||{})}_getExistingOrDefaultHeader(e,r,t){const s=e=>Object.keys(e).reduce((r,t)=>(r[t.toLowerCase()]=e[t],r),{});let o;if(this.requestOptions&&this.requestOptions.headers){o=s(this.requestOptions.headers)[r]}return e[r]||o||t}_getAgent(e){let r;let a=n.getProxyUrl(e);let c=a&&a.hostname;if(this._keepAlive&&c){r=this._proxyAgent}if(this._keepAlive&&!c){r=this._agent}if(!!r){return r}const p=e.protocol==="https:";let l=100;if(!!this.requestOptions){l=this.requestOptions.maxSockets||s.globalAgent.maxSockets}if(c){if(!i){i=t(4294)}const e={maxSockets:l,keepAlive:this._keepAlive,proxy:{proxyAuth:`${a.username}:${a.password}`,host:a.hostname,port:a.port}};let s;const o=a.protocol==="https:";if(p){s=o?i.httpsOverHttps:i.httpsOverHttp}else{s=o?i.httpOverHttps:i.httpOverHttp}r=s(e);this._proxyAgent=r}if(this._keepAlive&&!r){const e={keepAlive:this._keepAlive,maxSockets:l};r=p?new o.Agent(e):new s.Agent(e);this._agent=r}if(!r){r=p?o.globalAgent:s.globalAgent}if(p&&this._ignoreSslError){r.options=Object.assign(r.options||{},{rejectUnauthorized:false})}return r}_performExponentialBackoff(e){e=Math.min(m,e);const r=f*Math.pow(2,e);return new Promise(e=>setTimeout(()=>e(),r))}static dateTimeDeserializer(e,r){if(typeof r==="string"){let e=new Date(r);if(!isNaN(e.valueOf())){return e}}return r}async _processResponse(e,r){return new Promise(async(t,s)=>{const o=e.message.statusCode;const n={statusCode:o,result:null,headers:{}};if(o==a.NotFound){t(n)}let i;let c;try{c=await e.readBody();if(c&&c.length>0){if(r&&r.deserializeDates){i=JSON.parse(c,HttpClient.dateTimeDeserializer)}else{i=JSON.parse(c)}n.result=i}n.headers=e.message.headers}catch(e){}if(o>299){let e;if(i&&i.message){e=i.message}else if(c&&c.length>0){e=c}else{e="Failed request: ("+o+")"}let r=new HttpClientError(e,o);r.result=n.result;s(r)}else{t(n)}})}}r.HttpClient=HttpClient},6443:(e,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});function getProxyUrl(e){let r=e.protocol==="https:";let t;if(checkBypass(e)){return t}let s;if(r){s=process.env["https_proxy"]||process.env["HTTPS_PROXY"]}else{s=process.env["http_proxy"]||process.env["HTTP_PROXY"]}if(s){t=new URL(s)}return t}r.getProxyUrl=getProxyUrl;function checkBypass(e){if(!e.hostname){return false}let r=process.env["no_proxy"]||process.env["NO_PROXY"]||"";if(!r){return false}let t;if(e.port){t=Number(e.port)}else if(e.protocol==="http:"){t=80}else if(e.protocol==="https:"){t=443}let s=[e.hostname.toUpperCase()];if(typeof t==="number"){s.push(`${s[0]}:${t}`)}for(let e of r.split(",").map(e=>e.trim().toUpperCase()).filter(e=>e)){if(s.some(r=>r===e)){return true}}return false}r.checkBypass=checkBypass},334:(e,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});async function auth(e){const r=e.split(/\./).length===3?"app":/^v\d+\./.test(e)?"installation":"oauth";return{type:"token",token:e,tokenType:r}}function withAuthorizationPrefix(e){if(e.split(/\./).length===3){return`bearer ${e}`}return`token ${e}`}async function hook(e,r,t,s){const o=r.endpoint.merge(t,s);o.headers.authorization=withAuthorizationPrefix(e);return r(o)}const t=function createTokenAuth(e){if(!e){throw new Error("[@octokit/auth-token] No token passed to createTokenAuth")}if(typeof e!=="string"){throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string")}e=e.replace(/^(token|bearer) +/i,"");return Object.assign(auth.bind(null,e),{hook:hook.bind(null,e)})};r.createTokenAuth=t},6762:(e,r,t)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});var s=t(5030);var o=t(3682);var n=t(6234);var i=t(8467);var a=t(334);function _objectWithoutPropertiesLoose(e,r){if(e==null)return{};var t={};var s=Object.keys(e);var o,n;for(n=0;n<s.length;n++){o=s[n];if(r.indexOf(o)>=0)continue;t[o]=e[o]}return t}function _objectWithoutProperties(e,r){if(e==null)return{};var t=_objectWithoutPropertiesLoose(e,r);var s,o;if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++){s=n[o];if(r.indexOf(s)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(e,s))continue;t[s]=e[s]}}return t}const c="3.2.5";class Octokit{constructor(e={}){const r=new o.Collection;const t={baseUrl:n.request.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},e.request,{hook:r.bind(null,"request")}),mediaType:{previews:[],format:""}};t.headers["user-agent"]=[e.userAgent,`octokit-core.js/${c} ${s.getUserAgent()}`].filter(Boolean).join(" ");if(e.baseUrl){t.baseUrl=e.baseUrl}if(e.previews){t.mediaType.previews=e.previews}if(e.timeZone){t.headers["time-zone"]=e.timeZone}this.request=n.request.defaults(t);this.graphql=i.withCustomRequest(this.request).defaults(t);this.log=Object.assign({debug:()=>{},info:()=>{},warn:console.warn.bind(console),error:console.error.bind(console)},e.log);this.hook=r;if(!e.authStrategy){if(!e.auth){this.auth=(async()=>({type:"unauthenticated"}))}else{const t=a.createTokenAuth(e.auth);r.wrap("request",t.hook);this.auth=t}}else{const{authStrategy:t}=e,s=_objectWithoutProperties(e,["authStrategy"]);const o=t(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:s},e.auth));r.wrap("request",o.hook);this.auth=o}const p=this.constructor;p.plugins.forEach(r=>{Object.assign(this,r(this,e))})}static defaults(e){const r=class extends(this){constructor(...r){const t=r[0]||{};if(typeof e==="function"){super(e(t));return}super(Object.assign({},e,t,t.userAgent&&e.userAgent?{userAgent:`${t.userAgent} ${e.userAgent}`}:null))}};return r}static plugin(...e){var r;const t=this.plugins;const s=(r=class extends(this){},r.plugins=t.concat(e.filter(e=>!t.includes(e))),r);return s}}Octokit.VERSION=c;Octokit.plugins=[];r.Octokit=Octokit},9440:(e,r,t)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});var s=t(3287);var o=t(5030);function lowercaseKeys(e){if(!e){return{}}return Object.keys(e).reduce((r,t)=>{r[t.toLowerCase()]=e[t];return r},{})}function mergeDeep(e,r){const t=Object.assign({},e);Object.keys(r).forEach(o=>{if(s.isPlainObject(r[o])){if(!(o in e))Object.assign(t,{[o]:r[o]});else t[o]=mergeDeep(e[o],r[o])}else{Object.assign(t,{[o]:r[o]})}});return t}function removeUndefinedProperties(e){for(const r in e){if(e[r]===undefined){delete e[r]}}return e}function merge(e,r,t){if(typeof r==="string"){let[e,s]=r.split(" ");t=Object.assign(s?{method:e,url:s}:{url:e},t)}else{t=Object.assign({},r)}t.headers=lowercaseKeys(t.headers);removeUndefinedProperties(t);removeUndefinedProperties(t.headers);const s=mergeDeep(e||{},t);if(e&&e.mediaType.previews.length){s.mediaType.previews=e.mediaType.previews.filter(e=>!s.mediaType.previews.includes(e)).concat(s.mediaType.previews)}s.mediaType.previews=s.mediaType.previews.map(e=>e.replace(/-preview/,""));return s}function addQueryParameters(e,r){const t=/\?/.test(e)?"&":"?";const s=Object.keys(r);if(s.length===0){return e}return e+t+s.map(e=>{if(e==="q"){return"q="+r.q.split("+").map(encodeURIComponent).join("+")}return`${e}=${encodeURIComponent(r[e])}`}).join("&")}const n=/\{[^}]+\}/g;function removeNonChars(e){return e.replace(/^\W+|\W+$/g,"").split(/,/)}function extractUrlVariableNames(e){const r=e.match(n);if(!r){return[]}return r.map(removeNonChars).reduce((e,r)=>e.concat(r),[])}function omit(e,r){return Object.keys(e).filter(e=>!r.includes(e)).reduce((r,t)=>{r[t]=e[t];return r},{})}function encodeReserved(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map(function(e){if(!/%[0-9A-Fa-f]/.test(e)){e=encodeURI(e).replace(/%5B/g,"[").replace(/%5D/g,"]")}return e}).join("")}function encodeUnreserved(e){return encodeURIComponent(e).replace(/[!'()*]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})}function encodeValue(e,r,t){r=e==="+"||e==="#"?encodeReserved(r):encodeUnreserved(r);if(t){return encodeUnreserved(t)+"="+r}else{return r}}function isDefined(e){return e!==undefined&&e!==null}function isKeyOperator(e){return e===";"||e==="&"||e==="?"}function getValues(e,r,t,s){var o=e[t],n=[];if(isDefined(o)&&o!==""){if(typeof o==="string"||typeof o==="number"||typeof o==="boolean"){o=o.toString();if(s&&s!=="*"){o=o.substring(0,parseInt(s,10))}n.push(encodeValue(r,o,isKeyOperator(r)?t:""))}else{if(s==="*"){if(Array.isArray(o)){o.filter(isDefined).forEach(function(e){n.push(encodeValue(r,e,isKeyOperator(r)?t:""))})}else{Object.keys(o).forEach(function(e){if(isDefined(o[e])){n.push(encodeValue(r,o[e],e))}})}}else{const e=[];if(Array.isArray(o)){o.filter(isDefined).forEach(function(t){e.push(encodeValue(r,t))})}else{Object.keys(o).forEach(function(t){if(isDefined(o[t])){e.push(encodeUnreserved(t));e.push(encodeValue(r,o[t].toString()))}})}if(isKeyOperator(r)){n.push(encodeUnreserved(t)+"="+e.join(","))}else if(e.length!==0){n.push(e.join(","))}}}}else{if(r===";"){if(isDefined(o)){n.push(encodeUnreserved(t))}}else if(o===""&&(r==="&"||r==="?")){n.push(encodeUnreserved(t)+"=")}else if(o===""){n.push("")}}return n}function parseUrl(e){return{expand:expand.bind(null,e)}}function expand(e,r){var t=["+","#",".","/",";","?","&"];return e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,function(e,s,o){if(s){let e="";const o=[];if(t.indexOf(s.charAt(0))!==-1){e=s.charAt(0);s=s.substr(1)}s.split(/,/g).forEach(function(t){var s=/([^:\*]*)(?::(\d+)|(\*))?/.exec(t);o.push(getValues(r,e,s[1],s[2]||s[3]))});if(e&&e!=="+"){var n=",";if(e==="?"){n="&"}else if(e!=="#"){n=e}return(o.length!==0?e:"")+o.join(n)}else{return o.join(",")}}else{return encodeReserved(o)}})}function parse(e){let r=e.method.toUpperCase();let t=(e.url||"/").replace(/:([a-z]\w+)/g,"{$1}");let s=Object.assign({},e.headers);let o;let n=omit(e,["method","baseUrl","url","headers","request","mediaType"]);const i=extractUrlVariableNames(t);t=parseUrl(t).expand(n);if(!/^http/.test(t)){t=e.baseUrl+t}const a=Object.keys(e).filter(e=>i.includes(e)).concat("baseUrl");const c=omit(n,a);const p=/application\/octet-stream/i.test(s.accept);if(!p){if(e.mediaType.format){s.accept=s.accept.split(/,/).map(r=>r.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${e.mediaType.format}`)).join(",")}if(e.mediaType.previews.length){const r=s.accept.match(/[\w-]+(?=-preview)/g)||[];s.accept=r.concat(e.mediaType.previews).map(r=>{const t=e.mediaType.format?`.${e.mediaType.format}`:"+json";return`application/vnd.github.${r}-preview${t}`}).join(",")}}if(["GET","HEAD"].includes(r)){t=addQueryParameters(t,c)}else{if("data"in c){o=c.data}else{if(Object.keys(c).length){o=c}else{s["content-length"]=0}}}if(!s["content-type"]&&typeof o!=="undefined"){s["content-type"]="application/json; charset=utf-8"}if(["PATCH","PUT"].includes(r)&&typeof o==="undefined"){o=""}return Object.assign({method:r,url:t,headers:s},typeof o!=="undefined"?{body:o}:null,e.request?{request:e.request}:null)}function endpointWithDefaults(e,r,t){return parse(merge(e,r,t))}function withDefaults(e,r){const t=merge(e,r);const s=endpointWithDefaults.bind(null,t);return Object.assign(s,{DEFAULTS:t,defaults:withDefaults.bind(null,t),merge:merge.bind(null,t),parse:parse})}const i="6.0.11";const a=`octokit-endpoint.js/${i} ${o.getUserAgent()}`;const c={method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":a},mediaType:{format:"",previews:[]}};const p=withDefaults(null,c);r.endpoint=p},8467:(e,r,t)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});var s=t(6234);var o=t(5030);const n="4.6.0";class GraphqlError extends Error{constructor(e,r){const t=r.data.errors[0].message;super(t);Object.assign(this,r.data);Object.assign(this,{headers:r.headers});this.name="GraphqlError";this.request=e;if(Error.captureStackTrace){Error.captureStackTrace(this,this.constructor)}}}const i=["method","baseUrl","url","headers","request","query","mediaType"];const a=/\/api\/v3\/?$/;function graphql(e,r,t){if(typeof r==="string"&&t&&"query"in t){return Promise.reject(new Error(`[@octokit/graphql] "query" cannot be used as variable name`))}const s=typeof r==="string"?Object.assign({query:r},t):r;const o=Object.keys(s).reduce((e,r)=>{if(i.includes(r)){e[r]=s[r];return e}if(!e.variables){e.variables={}}e.variables[r]=s[r];return e},{});const n=s.baseUrl||e.endpoint.DEFAULTS.baseUrl;if(a.test(n)){o.url=n.replace(a,"/api/graphql")}return e(o).then(e=>{if(e.data.errors){const r={};for(const t of Object.keys(e.headers)){r[t]=e.headers[t]}throw new GraphqlError(o,{headers:r,data:e.data})}return e.data.data})}function withDefaults(e,r){const t=e.defaults(r);const o=(e,r)=>{return graphql(t,e,r)};return Object.assign(o,{defaults:withDefaults.bind(null,t),endpoint:s.request.endpoint})}const c=withDefaults(s.request,{headers:{"user-agent":`octokit-graphql.js/${n} ${o.getUserAgent()}`},method:"POST",url:"/graphql"});function withCustomRequest(e){return withDefaults(e,{method:"POST",url:"/graphql"})}r.graphql=c;r.withCustomRequest=withCustomRequest},4193:(e,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});const t="2.9.1";function normalizePaginatedListResponse(e){const r="total_count"in e.data&&!("url"in e.data);if(!r)return e;const t=e.data.incomplete_results;const s=e.data.repository_selection;const o=e.data.total_count;delete e.data.incomplete_results;delete e.data.repository_selection;delete e.data.total_count;const n=Object.keys(e.data)[0];const i=e.data[n];e.data=i;if(typeof t!=="undefined"){e.data.incomplete_results=t}if(typeof s!=="undefined"){e.data.repository_selection=s}e.data.total_count=o;return e}function iterator(e,r,t){const s=typeof r==="function"?r.endpoint(t):e.request.endpoint(r,t);const o=typeof r==="function"?r:e.request;const n=s.method;const i=s.headers;let a=s.url;return{[Symbol.asyncIterator]:()=>({async next(){if(!a)return{done:true};const e=await o({method:n,url:a,headers:i});const r=normalizePaginatedListResponse(e);a=((r.headers.link||"").match(/<([^>]+)>;\s*rel="next"/)||[])[1];return{value:r}}})}}function paginate(e,r,t,s){if(typeof t==="function"){s=t;t=undefined}return gather(e,[],iterator(e,r,t)[Symbol.asyncIterator](),s)}function gather(e,r,t,s){return t.next().then(o=>{if(o.done){return r}let n=false;function done(){n=true}r=r.concat(s?s(o.value,done):o.value.data);if(n){return r}return gather(e,r,t,s)})}const s=Object.assign(paginate,{iterator:iterator});function paginateRest(e){return{paginate:Object.assign(paginate.bind(null,e),{iterator:iterator.bind(null,e)})}}paginateRest.VERSION=t;r.composePaginateRest=s;r.paginateRest=paginateRest},8883:(e,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});const t="1.0.3";function requestLog(e){e.hook.wrap("request",(r,t)=>{e.log.debug("request",t);const s=Date.now();const o=e.request.endpoint.parse(t);const n=o.url.replace(t.baseUrl,"");return r(t).then(r=>{e.log.info(`${o.method} ${n} - ${r.status} in ${Date.now()-s}ms`);return r}).catch(r=>{e.log.info(`${o.method} ${n} - ${r.status} in ${Date.now()-s}ms`);throw r})})}requestLog.VERSION=t;r.requestLog=requestLog},3044:(e,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});const t={actions:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],disableSelectedRepositoryGithubActionsOrganization:["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],disableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],enableSelectedRepositoryGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],enableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],getAllowedActionsOrganization:["GET /orgs/{org}/actions/permissions/selected-actions"],getAllowedActionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getGithubActionsPermissionsOrganization:["GET /orgs/{org}/actions/permissions"],getGithubActionsPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getRepoPermissions:["GET /repos/{owner}/{repo}/actions/permissions",{},{renamed:["actions","getGithubActionsPermissionsRepository"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelectedRepositoriesEnabledGithubActionsOrganization:["GET /orgs/{org}/actions/permissions/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],setAllowedActionsOrganization:["PUT /orgs/{org}/actions/permissions/selected-actions"],setAllowedActionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],setGithubActionsPermissionsOrganization:["PUT /orgs/{org}/actions/permissions"],setGithubActionsPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],setSelectedRepositoriesEnabledGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}"],checkToken:["POST /applications/{client_id}/token"],createContentAttachment:["POST /content_references/{content_reference_id}/attachments",{mediaType:{previews:["corsair"]}}],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens"],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}"],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app"],getBySlug:["GET /apps/{app_slug}"],getInstallation:["GET /app/installations/{installation_id}"],getOrgInstallation:["GET /orgs/{org}/installation"],getRepoInstallation:["GET /repos/{owner}/{repo}/installation"],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation"],getWebhookConfigForApp:["GET /app/hook/config"],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories"],listInstallations:["GET /app/installations"],listInstallationsForAuthenticatedUser:["GET /user/installations"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories"],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],scopeToken:["POST /applications/{client_id}/token/scoped"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"],updateWebhookConfigForApp:["PATCH /app/hook/config"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs"],createSuite:["POST /repos/{owner}/{repo}/check-suites"],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences"],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]},codeScanning:{getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",{},{renamedParameters:{alert_id:"alert_number"}}],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"],listRecentAnalyses:["GET /repos/{owner}/{repo}/code-scanning/analyses"],updateAlert:["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],uploadSarif:["POST /repos/{owner}/{repo}/code-scanning/sarifs"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct",{mediaType:{previews:["scarlet-witch"]}}],getConductCode:["GET /codes_of_conduct/{key}",{mediaType:{previews:["scarlet-witch"]}}],getForRepo:["GET /repos/{owner}/{repo}/community/code_of_conduct",{mediaType:{previews:["scarlet-witch"]}}]},emojis:{get:["GET /emojis"]},enterpriseAdmin:{disableSelectedOrganizationGithubActionsEnterprise:["DELETE /enterprises/{enterprise}/actions/permissions/organizations/{org_id}"],enableSelectedOrganizationGithubActionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions/organizations/{org_id}"],getAllowedActionsEnterprise:["GET /enterprises/{enterprise}/actions/permissions/selected-actions"],getGithubActionsPermissionsEnterprise:["GET /enterprises/{enterprise}/actions/permissions"],listSelectedOrganizationsEnabledGithubActionsEnterprise:["GET /enterprises/{enterprise}/actions/permissions/organizations"],setAllowedActionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions/selected-actions"],setGithubActionsPermissionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions"],setSelectedOrganizationsEnabledGithubActionsEnterprise:["PUT /enterprises/{enterprise}/actions/permissions/organizations"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},interactions:{getRestrictionsForAuthenticatedUser:["GET /user/interaction-limits"],getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits"],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits"],getRestrictionsForYourPublicRepos:["GET /user/interaction-limits",{},{renamed:["interactions","getRestrictionsForAuthenticatedUser"]}],removeRestrictionsForAuthenticatedUser:["DELETE /user/interaction-limits"],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits"],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits"],removeRestrictionsForYourPublicRepos:["DELETE /user/interaction-limits",{},{renamed:["interactions","removeRestrictionsForAuthenticatedUser"]}],setRestrictionsForAuthenticatedUser:["PUT /user/interaction-limits"],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits"],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits"],setRestrictionsForYourPublicRepos:["PUT /user/interaction-limits",{},{renamed:["interactions","setRestrictionsForAuthenticatedUser"]}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline",{mediaType:{previews:["mockingbird"]}}],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"],getOctocat:["GET /octocat"],getZen:["GET /zen"],root:["GET /"]},migrations:{cancelImport:["DELETE /repos/{owner}/{repo}/import"],deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],getCommitAuthors:["GET /repos/{owner}/{repo}/import/authors"],getImportStatus:["GET /repos/{owner}/{repo}/import"],getLargeFiles:["GET /repos/{owner}/{repo}/import/large_files"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}",{mediaType:{previews:["wyandotte"]}}],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}",{mediaType:{previews:["wyandotte"]}}],listForAuthenticatedUser:["GET /user/migrations",{mediaType:{previews:["wyandotte"]}}],listForOrg:["GET /orgs/{org}/migrations",{mediaType:{previews:["wyandotte"]}}],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories",{mediaType:{previews:["wyandotte"]}}],listReposForUser:["GET /user/migrations/{migration_id}/repositories",{mediaType:{previews:["wyandotte"]}}],mapCommitAuthor:["PATCH /repos/{owner}/{repo}/import/authors/{author_id}"],setLfsPreference:["PATCH /repos/{owner}/{repo}/import/lfs"],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],startImport:["PUT /repos/{owner}/{repo}/import"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock",{mediaType:{previews:["wyandotte"]}}],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock",{mediaType:{previews:["wyandotte"]}}],updateImport:["PATCH /repos/{owner}/{repo}/import"]},orgs:{blockUser:["PUT /orgs/{org}/blocks/{username}"],cancelInvitation:["DELETE /orgs/{org}/invitations/{invitation_id}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createInvitation:["POST /orgs/{org}/invitations"],createWebhook:["POST /orgs/{org}/hooks"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],get:["GET /orgs/{org}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],getWebhookConfigForOrg:["GET /orgs/{org}/hooks/{hook_id}/config"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations"],listBlockedUsers:["GET /orgs/{org}/blocks"],listFailedInvitations:["GET /orgs/{org}/failed_invitations"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listWebhooks:["GET /orgs/{org}/hooks"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"],updateWebhookConfigForOrg:["PATCH /orgs/{org}/hooks/{hook_id}/config"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}",{mediaType:{previews:["inertia"]}}],createCard:["POST /projects/columns/{column_id}/cards",{mediaType:{previews:["inertia"]}}],createColumn:["POST /projects/{project_id}/columns",{mediaType:{previews:["inertia"]}}],createForAuthenticatedUser:["POST /user/projects",{mediaType:{previews:["inertia"]}}],createForOrg:["POST /orgs/{org}/projects",{mediaType:{previews:["inertia"]}}],createForRepo:["POST /repos/{owner}/{repo}/projects",{mediaType:{previews:["inertia"]}}],delete:["DELETE /projects/{project_id}",{mediaType:{previews:["inertia"]}}],deleteCard:["DELETE /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],deleteColumn:["DELETE /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}],get:["GET /projects/{project_id}",{mediaType:{previews:["inertia"]}}],getCard:["GET /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],getColumn:["GET /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}],getPermissionForUser:["GET /projects/{project_id}/collaborators/{username}/permission",{mediaType:{previews:["inertia"]}}],listCards:["GET /projects/columns/{column_id}/cards",{mediaType:{previews:["inertia"]}}],listCollaborators:["GET /projects/{project_id}/collaborators",{mediaType:{previews:["inertia"]}}],listColumns:["GET /projects/{project_id}/columns",{mediaType:{previews:["inertia"]}}],listForOrg:["GET /orgs/{org}/projects",{mediaType:{previews:["inertia"]}}],listForRepo:["GET /repos/{owner}/{repo}/projects",{mediaType:{previews:["inertia"]}}],listForUser:["GET /users/{username}/projects",{mediaType:{previews:["inertia"]}}],moveCard:["POST /projects/columns/cards/{card_id}/moves",{mediaType:{previews:["inertia"]}}],moveColumn:["POST /projects/columns/{column_id}/moves",{mediaType:{previews:["inertia"]}}],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}",{mediaType:{previews:["inertia"]}}],update:["PATCH /projects/{project_id}",{mediaType:{previews:["inertia"]}}],updateCard:["PATCH /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],updateColumn:["PATCH /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch",{mediaType:{previews:["lydian"]}}],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteLegacy:["DELETE /reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}},{deprecated:"octokit.reactions.deleteLegacy() is deprecated, see https://docs.github.com/v3/reactions/#delete-a-reaction-legacy"}],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createPagesSite:["POST /repos/{owner}/{repo}/pages",{mediaType:{previews:["switcheroo"]}}],createRelease:["POST /repos/{owner}/{repo}/releases"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate",{mediaType:{previews:["baptiste"]}}],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages",{mediaType:{previews:["switcheroo"]}}],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes",{mediaType:{previews:["london"]}}],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],downloadArchive:["GET /repos/{owner}/{repo}/zipball/{ref}",{},{renamed:["repos","downloadZipballArchive"]}],downloadTarballArchive:["GET /repos/{owner}/{repo}/tarball/{ref}"],downloadZipballArchive:["GET /repos/{owner}/{repo}/zipball/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes",{mediaType:{previews:["london"]}}],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}}],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],getWebhookConfigForRepo:["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head",{mediaType:{previews:["groot"]}}],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls",{mediaType:{previews:["groot"]}}],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],renameBranch:["POST /repos/{owner}/{repo}/branches/{branch}/rename"],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}}],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","updateStatusCheckProtection"]}],updateStatusCheckProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],updateWebhookConfigForRepo:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits",{mediaType:{previews:["cloak"]}}],issuesAndPullRequests:["GET /search/issues"],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics",{mediaType:{previews:["mercy"]}}],users:["GET /search/users"]},secretScanning:{getAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],listAlertsForRepo:["GET /repos/{owner}/{repo}/secret-scanning/alerts"],updateAlert:["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateProjectPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}",{mediaType:{previews:["inertia"]}}],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}",{mediaType:{previews:["inertia"]}}],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects",{mediaType:{previews:["inertia"]}}],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys"],deleteEmailForAuthenticated:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}"],list:["GET /users"],listBlockedByAuthenticated:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}};const s="4.10.3";function endpointsToMethods(e,r){const t={};for(const[s,o]of Object.entries(r)){for(const[r,n]of Object.entries(o)){const[o,i,a]=n;const[c,p]=o.split(/ /);const l=Object.assign({method:c,url:p},i);if(!t[s]){t[s]={}}const u=t[s];if(a){u[r]=decorate(e,s,r,l,a);continue}u[r]=e.request.defaults(l)}}return t}function decorate(e,r,t,s,o){const n=e.request.defaults(s);function withDecorations(...s){let i=n.endpoint.merge(...s);if(o.mapToData){i=Object.assign({},i,{data:i[o.mapToData],[o.mapToData]:undefined});return n(i)}if(o.renamed){const[s,n]=o.renamed;e.log.warn(`octokit.${r}.${t}() has been renamed to octokit.${s}.${n}()`)}if(o.deprecated){e.log.warn(o.deprecated)}if(o.renamedParameters){const i=n.endpoint.merge(...s);for(const[s,n]of Object.entries(o.renamedParameters)){if(s in i){e.log.warn(`"${s}" parameter is deprecated for "octokit.${r}.${t}()". Use "${n}" instead`);if(!(n in i)){i[n]=i[s]}delete i[s]}}return n(i)}return n(...s)}return Object.assign(withDecorations,n)}function restEndpointMethods(e){return endpointsToMethods(e,t)}restEndpointMethods.VERSION=s;r.restEndpointMethods=restEndpointMethods},537:(e,r,t)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});function _interopDefault(e){return e&&typeof e==="object"&&"default"in e?e["default"]:e}var s=t(8932);var o=_interopDefault(t(1223));const n=o(e=>console.warn(e));class RequestError extends Error{constructor(e,r,t){super(e);if(Error.captureStackTrace){Error.captureStackTrace(this,this.constructor)}this.name="HttpError";this.status=r;Object.defineProperty(this,"code",{get(){n(new s.Deprecation("[@octokit/request-error] `error.code` is deprecated, use `error.status`."));return r}});this.headers=t.headers||{};const o=Object.assign({},t.request);if(t.request.headers.authorization){o.headers=Object.assign({},t.request.headers,{authorization:t.request.headers.authorization.replace(/ .*$/," [REDACTED]")})}o.url=o.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]");this.request=o}}r.RequestError=RequestError},6234:(e,r,t)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});function _interopDefault(e){return e&&typeof e==="object"&&"default"in e?e["default"]:e}var s=t(9440);var o=t(5030);var n=t(3287);var i=_interopDefault(t(467));var a=t(537);const c="5.4.14";function getBufferResponse(e){return e.arrayBuffer()}function fetchWrapper(e){if(n.isPlainObject(e.body)||Array.isArray(e.body)){e.body=JSON.stringify(e.body)}let r={};let t;let s;const o=e.request&&e.request.fetch||i;return o(e.url,Object.assign({method:e.method,body:e.body,headers:e.headers,redirect:e.redirect},e.request)).then(o=>{s=o.url;t=o.status;for(const e of o.headers){r[e[0]]=e[1]}if(t===204||t===205){return}if(e.method==="HEAD"){if(t<400){return}throw new a.RequestError(o.statusText,t,{headers:r,request:e})}if(t===304){throw new a.RequestError("Not modified",t,{headers:r,request:e})}if(t>=400){return o.text().then(s=>{const o=new a.RequestError(s,t,{headers:r,request:e});try{let e=JSON.parse(o.message);Object.assign(o,e);let r=e.errors;o.message=o.message+": "+r.map(JSON.stringify).join(", ")}catch(e){}throw o})}const n=o.headers.get("content-type");if(/application\/json/.test(n)){return o.json()}if(!n||/^text\/|charset=utf-8$/.test(n)){return o.text()}return getBufferResponse(o)}).then(e=>{return{status:t,url:s,headers:r,data:e}}).catch(t=>{if(t instanceof a.RequestError){throw t}throw new a.RequestError(t.message,500,{headers:r,request:e})})}function withDefaults(e,r){const t=e.defaults(r);const s=function(e,r){const s=t.merge(e,r);if(!s.request||!s.request.hook){return fetchWrapper(t.parse(s))}const o=(e,r)=>{return fetchWrapper(t.parse(t.merge(e,r)))};Object.assign(o,{endpoint:t,defaults:withDefaults.bind(null,t)});return s.request.hook(o,s)};return Object.assign(s,{endpoint:t,defaults:withDefaults.bind(null,t)})}const p=withDefaults(s.endpoint,{headers:{"user-agent":`octokit-request.js/${c} ${o.getUserAgent()}`}});r.request=p},5375:(e,r,t)=>{"use strict";var s;s={value:true};var o=t(4952);var n=t(8883);var i=t(4193);var a=t(4923);const c="17.11.2";const p=o.Octokit.plugin(n.requestLog,a.restEndpointMethods,i.paginateRest).defaults({userAgent:`octokit-rest.js/${c}`});r.v=p},4952:(e,r,t)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});var s=t(3318);var o=t(3682);var n=t(6234);var i=t(8467);var a=t(334);function _defineProperty(e,r,t){if(r in e){Object.defineProperty(e,r,{value:t,enumerable:true,configurable:true,writable:true})}else{e[r]=t}return e}function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);if(r)s=s.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable});t.push.apply(t,s)}return t}function _objectSpread2(e){for(var r=1;r<arguments.length;r++){var t=arguments[r]!=null?arguments[r]:{};if(r%2){ownKeys(Object(t),true).forEach(function(r){_defineProperty(e,r,t[r])})}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(e,Object.getOwnPropertyDescriptors(t))}else{ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})}}return e}const c="2.5.4";class Octokit{constructor(e={}){const r=new o.Collection;const t={baseUrl:n.request.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},e.request,{hook:r.bind(null,"request")}),mediaType:{previews:[],format:""}};t.headers["user-agent"]=[e.userAgent,`octokit-core.js/${c} ${s.getUserAgent()}`].filter(Boolean).join(" ");if(e.baseUrl){t.baseUrl=e.baseUrl}if(e.previews){t.mediaType.previews=e.previews}if(e.timeZone){t.headers["time-zone"]=e.timeZone}this.request=n.request.defaults(t);this.graphql=i.withCustomRequest(this.request).defaults(_objectSpread2(_objectSpread2({},t),{},{baseUrl:t.baseUrl.replace(/\/api\/v3$/,"/api")}));this.log=Object.assign({debug:()=>{},info:()=>{},warn:console.warn.bind(console),error:console.error.bind(console)},e.log);this.hook=r;if(!e.authStrategy){if(!e.auth){this.auth=(async()=>({type:"unauthenticated"}))}else{const t=a.createTokenAuth(e.auth);r.wrap("request",t.hook);this.auth=t}}else{const t=e.authStrategy(Object.assign({request:this.request},e.auth));r.wrap("request",t.hook);this.auth=t}const p=this.constructor;p.plugins.forEach(r=>{Object.assign(this,r(this,e))})}static defaults(e){const r=class extends(this){constructor(...r){const t=r[0]||{};super(Object.assign({},e,t,t.userAgent&&e.userAgent?{userAgent:`${t.userAgent} ${e.userAgent}`}:null))}};return r}static plugin(e,...r){var t;if(e instanceof Array){console.warn(["Passing an array of plugins to Octokit.plugin() has been deprecated.","Instead of:","  Octokit.plugin([plugin1, plugin2, ...])","Use:","  Octokit.plugin(plugin1, plugin2, ...)"].join("\n"))}const s=this.plugins;let o=[...e instanceof Array?e:[e],...r];const n=(t=class extends(this){},t.plugins=s.concat(o.filter(e=>!s.includes(e))),t);return n}}Octokit.VERSION=c;Octokit.plugins=[];r.Octokit=Octokit},4923:(e,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});const t={actions:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}",{},{renamedParameters:{name:"secret_name"}}],createOrUpdateSecretForRepo:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}",{},{renamed:["actions","createOrUpdateRepoSecret"],renamedParameters:{name:"secret_name"}}],createRegistrationToken:["POST /repos/{owner}/{repo}/actions/runners/registration-token",{},{renamed:["actions","createRegistrationTokenForRepo"]}],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveToken:["POST /repos/{owner}/{repo}/actions/runners/remove-token",{},{renamed:["actions","createRemoveTokenForRepo"]}],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}",{},{renamedParameters:{name:"secret_name"}}],deleteSecretFromRepo:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}",{},{renamed:["actions","deleteRepoSecret"],renamedParameters:{name:"secret_name"}}],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowJobLogs:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs",{},{renamed:["actions","downloadJobLogsForWorkflowRun"]}],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key",{},{renamed:["actions","getRepoPublicKey"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}",{},{renamedParameters:{name:"secret_name"}}],getSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}",{},{renamed:["actions","getRepoSecret"],renamedParameters:{name:"secret_name"}}],getSelfHostedRunner:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}",{},{renamed:["actions","getSelfHostedRunnerForRepo"]}],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowJob:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}",{},{renamed:["actions","getJobForWorkflowRun"]}],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listDownloadsForSelfHostedRunnerApplication:["GET /repos/{owner}/{repo}/actions/runners/downloads",{},{renamed:["actions","listRunnerApplicationsForRepo"]}],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoWorkflowRuns:["GET /repos/{owner}/{repo}/actions/runs",{},{renamed:["actions","listWorkflowRunsForRepo"]}],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSecretsForRepo:["GET /repos/{owner}/{repo}/actions/secrets",{},{renamed:["actions","listRepoSecrets"]}],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowJobLogs:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs",{},{renamed:["actions","downloadWorkflowJobLogs"]}],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs",{},{renamed:["actions","downloadWorkflowRunLogs"]}],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],removeSelfHostedRunner:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}",{},{renamed:["actions","deleteSelfHostedRunnerFromRepo"]}],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],checkStarringRepo:["GET /user/starred/{owner}/{repo}",{},{renamed:["activity","checkRepoIsStarredByAuthenticatedUser"]}],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscription:["PUT /notifications",{},{renamed:["activity","getThreadSubscriptionForAuthenticatedUser"]}],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listEventsForOrg:["GET /users/{username}/events/orgs/{org}",{},{renamed:["activity","listOrgEventsForAuthenticatedUser"]}],listEventsForUser:["GET /users/{username}/events",{},{renamed:["activity","listEventsForAuthenticatedUser"]}],listFeeds:["GET /feeds",{},{renamed:["activity","getFeeds"]}],listNotifications:["GET /notifications",{},{renamed:["activity","listNotificationsForAuthenticatedUser"]}],listNotificationsForAuthenticatedUser:["GET /notifications"],listNotificationsForRepo:["GET /repos/{owner}/{repo}/notifications",{},{renamed:["activity","listRepoNotificationsForAuthenticatedUser"]}],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForOrg:["GET /orgs/{org}/events",{},{renamed:["activity","listPublicOrgEvents"]}],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markAsRead:["PUT /notifications",{},{renamed:["activity","markNotificationsAsRead"]}],markNotificationsAsRead:["PUT /notifications"],markNotificationsAsReadForRepo:["PUT /repos/{owner}/{repo}/notifications",{},{renamed:["activity","markRepoNotificationsAsRead"]}],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepo:["PUT /user/starred/{owner}/{repo}",{},{renamed:["activity","starRepoForAuthenticatedUser"]}],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepo:["DELETE /user/starred/{owner}/{repo}",{},{renamed:["activity","unstarRepoForAuthenticatedUser"]}],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}",{mediaType:{previews:["machine-man"]}}],checkAccountIsAssociatedWithAny:["GET /marketplace_listing/accounts/{account_id}",{},{renamed:["apps","getSubscriptionPlanForAccount"]}],checkAccountIsAssociatedWithAnyStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}",{},{renamed:["apps","getSubscriptionPlanForAccountStubbed"]}],checkToken:["POST /applications/{client_id}/token"],createContentAttachment:["POST /content_references/{content_reference_id}/attachments",{mediaType:{previews:["corsair"]}}],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens",{mediaType:{previews:["machine-man"]}}],createInstallationToken:["POST /app/installations/{installation_id}/access_tokens",{mediaType:{previews:["machine-man"]}},{renamed:["apps","createInstallationAccessToken"]}],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}",{mediaType:{previews:["machine-man"]}}],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app",{mediaType:{previews:["machine-man"]}}],getBySlug:["GET /apps/{app_slug}",{mediaType:{previews:["machine-man"]}}],getInstallation:["GET /app/installations/{installation_id}",{mediaType:{previews:["machine-man"]}}],getOrgInstallation:["GET /orgs/{org}/installation",{mediaType:{previews:["machine-man"]}}],getRepoInstallation:["GET /repos/{owner}/{repo}/installation",{mediaType:{previews:["machine-man"]}}],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation",{mediaType:{previews:["machine-man"]}}],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listAccountsUserOrOrgOnPlan:["GET /marketplace_listing/plans/{plan_id}/accounts",{},{renamed:["apps","listAccountsForPlan"]}],listAccountsUserOrOrgOnPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts",{},{renamed:["apps","listAccountsForPlanStubbed"]}],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories",{mediaType:{previews:["machine-man"]}}],listInstallations:["GET /app/installations",{mediaType:{previews:["machine-man"]}}],listInstallationsForAuthenticatedUser:["GET /user/installations",{mediaType:{previews:["machine-man"]}}],listMarketplacePurchasesForAuthenticatedUser:["GET /user/marketplace_purchases",{},{renamed:["apps","listSubscriptionsForAuthenticatedUser"]}],listMarketplacePurchasesForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed",{},{renamed:["apps","listSubscriptionsForAuthenticatedUserStubbed"]}],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listRepos:["GET /installation/repositories",{mediaType:{previews:["machine-man"]}},{renamed:["apps","listReposAccessibleToInstallation"]}],listReposAccessibleToInstallation:["GET /installation/repositories",{mediaType:{previews:["machine-man"]}}],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}",{mediaType:{previews:["machine-man"]}}],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],revokeInstallationToken:["DELETE /installation/token",{},{renamed:["apps","revokeInstallationAccessToken"]}],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs",{mediaType:{previews:["antiope"]}}],createSuite:["POST /repos/{owner}/{repo}/check-suites",{mediaType:{previews:["antiope"]}}],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}",{mediaType:{previews:["antiope"]}}],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}",{mediaType:{previews:["antiope"]}}],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations",{mediaType:{previews:["antiope"]}}],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs",{mediaType:{previews:["antiope"]}}],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs",{mediaType:{previews:["antiope"]}}],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites",{mediaType:{previews:["antiope"]}}],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest",{mediaType:{previews:["antiope"]}}],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences",{mediaType:{previews:["antiope"]}}],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}",{mediaType:{previews:["antiope"]}}]},codeScanning:{getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_id}"],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct",{mediaType:{previews:["scarlet-witch"]}}],getConductCode:["GET /codes_of_conduct/{key}",{mediaType:{previews:["scarlet-witch"]}}],getForRepo:["GET /repos/{owner}/{repo}/community/code_of_conduct",{mediaType:{previews:["scarlet-witch"]}}],listConductCodes:["GET /codes_of_conduct",{mediaType:{previews:["scarlet-witch"]}},{renamed:["codesOfConduct","getAllCodesOfConduct"]}]},emojis:{get:["GET /emojis"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listPublicForUser:["GET /users/{username}/gists",{},{renamed:["gists","listForUser"]}],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"],listTemplates:["GET /gitignore/templates",{},{renamed:["gitignore","getAllTemplates"]}]},interactions:{addOrUpdateRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits",{mediaType:{previews:["sombra"]}},{renamed:["interactions","setRestrictionsForOrg"]}],addOrUpdateRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits",{mediaType:{previews:["sombra"]}},{renamed:["interactions","setRestrictionsForRepo"]}],getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits",{mediaType:{previews:["sombra"]}}],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits",{mediaType:{previews:["sombra"]}}],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits",{mediaType:{previews:["sombra"]}}],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits",{mediaType:{previews:["sombra"]}}],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits",{mediaType:{previews:["sombra"]}}],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits",{mediaType:{previews:["sombra"]}}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],checkAssignee:["GET /repos/{owner}/{repo}/assignees/{assignee}",{},{renamed:["issues","checkUserCanBeAssigned"]}],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline",{mediaType:{previews:["mockingbird"]}}],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],listMilestonesForRepo:["GET /repos/{owner}/{repo}/milestones",{},{renamed:["issues","listMilestones"]}],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],removeLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels",{},{renamed:["issues","removeAllLabels"]}],replaceAllLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels",{},{renamed:["issues","setLabels"]}],replaceLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels",{},{renamed:["issues","replaceAllLabels"]}],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"],listCommonlyUsed:["GET /licenses",{},{renamed:["licenses","getAllCommonlyUsed"]}]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"]},migrations:{cancelImport:["DELETE /repos/{owner}/{repo}/import"],deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive",{mediaType:{previews:["wyandotte"]}}],getCommitAuthors:["GET /repos/{owner}/{repo}/import/authors"],getImportProgress:["GET /repos/{owner}/{repo}/import",{},{renamed:["migrations","getImportStatus"]}],getImportStatus:["GET /repos/{owner}/{repo}/import"],getLargeFiles:["GET /repos/{owner}/{repo}/import/large_files"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}",{mediaType:{previews:["wyandotte"]}}],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}",{mediaType:{previews:["wyandotte"]}}],listForAuthenticatedUser:["GET /user/migrations",{mediaType:{previews:["wyandotte"]}}],listForOrg:["GET /orgs/{org}/migrations",{mediaType:{previews:["wyandotte"]}}],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories",{mediaType:{previews:["wyandotte"]}}],listReposForUser:["GET /user/{migration_id}/repositories",{mediaType:{previews:["wyandotte"]}}],mapCommitAuthor:["PATCH /repos/{owner}/{repo}/import/authors/{author_id}"],setLfsPreference:["PATCH /repos/{owner}/{repo}/import/lfs"],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],startImport:["PUT /repos/{owner}/{repo}/import"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock",{mediaType:{previews:["wyandotte"]}}],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock",{mediaType:{previews:["wyandotte"]}}],updateImport:["PATCH /repos/{owner}/{repo}/import"]},orgs:{addOrUpdateMembership:["PUT /orgs/{org}/memberships/{username}",{},{renamed:["orgs","setMembershipForUser"]}],blockUser:["PUT /orgs/{org}/blocks/{username}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembership:["GET /orgs/{org}/members/{username}",{},{renamed:["orgs","checkMembershipForUser"]}],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembership:["GET /orgs/{org}/public_members/{username}",{},{renamed:["orgs","checkPublicMembershipForUser"]}],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],concealMembership:["DELETE /orgs/{org}/public_members/{username}",{},{renamed:["orgs","removePublicMembershipForAuthenticatedUser"]}],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createHook:["POST /orgs/{org}/hooks",{},{renamed:["orgs","createWebhook"]}],createInvitation:["POST /orgs/{org}/invitations"],createWebhook:["POST /orgs/{org}/hooks"],deleteHook:["DELETE /orgs/{org}/hooks/{hook_id}",{},{renamed:["orgs","deleteWebhook"]}],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],get:["GET /orgs/{org}"],getHook:["GET /orgs/{org}/hooks/{hook_id}",{},{renamed:["orgs","getWebhook"]}],getMembership:["GET /orgs/{org}/memberships/{username}",{},{renamed:["orgs","getMembershipForUser"]}],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations",{mediaType:{previews:["machine-man"]}}],listBlockedUsers:["GET /orgs/{org}/blocks"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listHooks:["GET /orgs/{org}/hooks",{},{renamed:["orgs","listWebhooks"]}],listInstallations:["GET /orgs/{org}/installations",{mediaType:{previews:["machine-man"]}},{renamed:["orgs","listAppInstallations"]}],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listMembers:["GET /orgs/{org}/members"],listMemberships:["GET /user/memberships/orgs",{},{renamed:["orgs","listMembershipsForAuthenticatedUser"]}],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listWebhooks:["GET /orgs/{org}/hooks"],pingHook:["POST /orgs/{org}/hooks/{hook_id}/pings",{},{renamed:["orgs","pingWebhook"]}],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],publicizeMembership:["PUT /orgs/{org}/public_members/{username}",{},{renamed:["orgs","setPublicMembershipForAuthenticatedUser"]}],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembership:["DELETE /orgs/{org}/memberships/{username}",{},{renamed:["orgs","removeMembershipForUser"]}],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateHook:["PATCH /orgs/{org}/hooks/{hook_id}",{},{renamed:["orgs","updateWebhook"]}],updateMembership:["PATCH /user/memberships/orgs/{org}",{},{renamed:["orgs","updateMembershipForAuthenticatedUser"]}],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}",{mediaType:{previews:["inertia"]}}],createCard:["POST /projects/columns/{column_id}/cards",{mediaType:{previews:["inertia"]}}],createColumn:["POST /projects/{project_id}/columns",{mediaType:{previews:["inertia"]}}],createForAuthenticatedUser:["POST /user/projects",{mediaType:{previews:["inertia"]}}],createForOrg:["POST /orgs/{org}/projects",{mediaType:{previews:["inertia"]}}],createForRepo:["POST /repos/{owner}/{repo}/projects",{mediaType:{previews:["inertia"]}}],delete:["DELETE /projects/{project_id}",{mediaType:{previews:["inertia"]}}],deleteCard:["DELETE /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],deleteColumn:["DELETE /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}],get:["GET /projects/{project_id}",{mediaType:{previews:["inertia"]}}],getCard:["GET /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],getColumn:["GET /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}],getPermissionForUser:["GET /projects/{project_id}/collaborators/{username}/permission",{mediaType:{previews:["inertia"]}}],listCards:["GET /projects/columns/{column_id}/cards",{mediaType:{previews:["inertia"]}}],listCollaborators:["GET /projects/{project_id}/collaborators",{mediaType:{previews:["inertia"]}}],listColumns:["GET /projects/{project_id}/columns",{mediaType:{previews:["inertia"]}}],listForOrg:["GET /orgs/{org}/projects",{mediaType:{previews:["inertia"]}}],listForRepo:["GET /repos/{owner}/{repo}/projects",{mediaType:{previews:["inertia"]}}],listForUser:["GET /users/{username}/projects",{mediaType:{previews:["inertia"]}}],moveCard:["POST /projects/columns/cards/{card_id}/moves",{mediaType:{previews:["inertia"]}}],moveColumn:["POST /projects/columns/{column_id}/moves",{mediaType:{previews:["inertia"]}}],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}",{mediaType:{previews:["inertia"]}}],reviewUserPermissionLevel:["GET /projects/{project_id}/collaborators/{username}/permission",{mediaType:{previews:["inertia"]}},{renamed:["projects","getPermissionForUser"]}],update:["PATCH /projects/{project_id}",{mediaType:{previews:["inertia"]}}],updateCard:["PATCH /projects/columns/cards/{card_id}",{mediaType:{previews:["inertia"]}}],updateColumn:["PATCH /projects/columns/{column_id}",{mediaType:{previews:["inertia"]}}]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments",{},{renamed:["pulls","createReviewComment"]}],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],createReviewCommentReply:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies",{},{renamed:["pulls","createReplyForReviewComment"]}],createReviewRequest:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers",{},{renamed:["pulls","requestReviewers"]}],deleteComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}",{},{renamed:["pulls","deleteReviewComment"]}],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],deleteReviewRequest:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers",{},{renamed:["pulls","removeRequestedReviewers"]}],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}",{},{renamed:["pulls","getReviewComment"]}],getCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments",{},{renamed:["pulls","listCommentsForReview"]}],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments",{},{renamed:["pulls","listReviewComments"]}],listCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments",{},{renamed:["pulls","listReviewCommentsForRepo"]}],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviewRequests:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers",{},{renamed:["pulls","listRequestedReviewers"]}],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch",{mediaType:{previews:["lydian"]}}],updateComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}",{},{renamed:["pulls","updateReviewComment"]}],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],delete:["DELETE /reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}},{renamed:["reactions","deleteLegacy"]}],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}}],deleteLegacy:["DELETE /reactions/{reaction_id}",{mediaType:{previews:["squirrel-girl"]}},{deprecated:"octokit.reactions.deleteLegacy() is deprecated, see https://developer.github.com/v3/reactions/#delete-a-reaction-legacy"}],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions",{mediaType:{previews:["squirrel-girl"]}}]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addDeployKey:["POST /repos/{owner}/{repo}/keys",{},{renamed:["repos","createDeployKey"]}],addProtectedBranchAdminEnforcement:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins",{},{renamed:["repos","setAdminBranchProtection"]}],addProtectedBranchAppRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps",renamed:["repos","addAppAccessRestrictions"]}],addProtectedBranchRequiredSignatures:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}},{renamed:["repos","createCommitSignatureProtection"]}],addProtectedBranchRequiredStatusChecksContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts",renamed:["repos","addStatusCheckContexts"]}],addProtectedBranchTeamRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams",renamed:["repos","addTeamAccessRestrictions"]}],addProtectedBranchUserRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users",renamed:["repos","addUserAccessRestrictions"]}],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createHook:["POST /repos/{owner}/{repo}/hooks",{},{renamed:["repos","createWebhook"]}],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateFile:["PUT /repos/{owner}/{repo}/contents/{path}",{},{renamed:["repos","createOrUpdateFileContents"]}],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createPagesSite:["POST /repos/{owner}/{repo}/pages",{mediaType:{previews:["switcheroo"]}}],createRelease:["POST /repos/{owner}/{repo}/releases"],createStatus:["POST /repos/{owner}/{repo}/statuses/{sha}",{},{renamed:["repos","createCommitStatus"]}],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate",{mediaType:{previews:["baptiste"]}}],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteDownload:["DELETE /repos/{owner}/{repo}/downloads/{download_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteHook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}",{},{renamed:["repos","deleteWebhook"]}],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages",{mediaType:{previews:["switcheroo"]}}],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes",{mediaType:{previews:["london"]}}],disablePagesSite:["DELETE /repos/{owner}/{repo}/pages",{mediaType:{previews:["switcheroo"]}},{renamed:["repos","deletePagesSite"]}],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],downloadArchive:["GET /repos/{owner}/{repo}/{archive_format}/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes",{mediaType:{previews:["london"]}}],enablePagesSite:["POST /repos/{owner}/{repo}/pages",{mediaType:{previews:["switcheroo"]}},{renamed:["repos","createPagesSite"]}],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts",{mediaType:{previews:["dorian"]}}],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}}],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getArchiveLink:["GET /repos/{owner}/{repo}/{archive_format}/{ref}",{},{renamed:["repos","downloadArchive"]}],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}}],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContents:["GET /repos/{owner}/{repo}/contents/{path}",{},{renamed:["repos","getContent"]}],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getDownload:["GET /repos/{owner}/{repo}/downloads/{download_id}"],getHook:["GET /repos/{owner}/{repo}/hooks/{hook_id}",{},{renamed:["repos","getWebhook"]}],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getProtectedBranchAdminEnforcement:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins",{},{renamed:["repos","getAdminBranchProtection"]}],getProtectedBranchPullRequestReviewEnforcement:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews",{},{renamed:["repos","getPullRequestReviewProtection"]}],getProtectedBranchRequiredSignatures:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}},{renamed:["repos","getCommitSignatureProtection"]}],getProtectedBranchRequiredStatusChecks:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","getStatusChecksProtection"]}],getProtectedBranchRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions",{},{renamed:["repos","getAccessRestrictions"]}],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],list:["GET /user/repos",{},{renamed:["repos","listForAuthenticatedUser"]}],listAssetsForRelease:["GET /repos/{owner}/{repo}/releases/{release_id}/assets",{},{renamed:["repos","listReleaseAssets"]}],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head",{mediaType:{previews:["groot"]}}],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitComments:["GET /repos/{owner}/{repo}/comments",{},{renamed:["repos","listCommitCommentsForRepo"]}],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listDownloads:["GET /repos/{owner}/{repo}/downloads"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listHooks:["GET /repos/{owner}/{repo}/hooks",{},{renamed:["repos","listWebhooks"]}],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listProtectedBranchRequiredStatusChecksContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{renamed:["repos","getAllStatusCheckContexts"]}],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls",{mediaType:{previews:["groot"]}}],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses",{},{renamed:["repos","listCommitStatusesForRef"]}],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listTopics:["GET /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}},{renamed:["repos","getAllTopics"]}],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],pingHook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings",{},{renamed:["repos","pingWebhook"]}],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection",{},{renamed:["repos","deleteBranchProtection"]}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}",{},{renamed:["repos","deleteDeployKey"]}],removeProtectedBranchAdminEnforcement:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins",{},{renamed:["repos","deleteAdminBranchProtection"]}],removeProtectedBranchAppRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps",renamed:["repos","removeAppAccessRestrictions"]}],removeProtectedBranchPullRequestReviewEnforcement:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews",{},{renamed:["repos","deletePullRequestReviewProtection"]}],removeProtectedBranchRequiredSignatures:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",{mediaType:{previews:["zzzax"]}},{renamed:["repos","deleteCommitSignatureProtection"]}],removeProtectedBranchRequiredStatusChecks:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","removeStatusChecksProtection"]}],removeProtectedBranchRequiredStatusChecksContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts",renamed:["repos","removeStatusCheckContexts"]}],removeProtectedBranchRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions",{},{renamed:["repos","deleteAccessRestrictions"]}],removeProtectedBranchTeamRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams",renamed:["repos","removeTeamAccessRestrictions"]}],removeProtectedBranchUserRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users",renamed:["repos","removeUserAccessRestrictions"]}],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}}],replaceProtectedBranchAppRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps",renamed:["repos","setAppAccessRestrictions"]}],replaceProtectedBranchRequiredStatusChecksContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts",renamed:["repos","setStatusCheckContexts"]}],replaceProtectedBranchTeamRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams",renamed:["repos","setTeamAccessRestrictions"]}],replaceProtectedBranchUserRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users",renamed:["repos","setUserAccessRestrictions"]}],replaceTopics:["PUT /repos/{owner}/{repo}/topics",{mediaType:{previews:["mercy"]}},{renamed:["repos","replaceAllTopics"]}],requestPageBuild:["POST /repos/{owner}/{repo}/pages/builds",{},{renamed:["repos","requestPagesBuild"]}],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],retrieveCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile",{},{renamed:["repos","getCommunityProfileMetrics"]}],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushHook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests",{},{renamed:["repos","testPushWebhook"]}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateHook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}",{},{renamed:["repos","updateWebhook"]}],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updateProtectedBranchPullRequestReviewEnforcement:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews",{},{renamed:["repos","updatePullRequestReviewProtection"]}],updateProtectedBranchRequiredStatusChecks:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","updateStatusChecksProtection"]}],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits",{mediaType:{previews:["cloak"]}}],issuesAndPullRequests:["GET /search/issues"],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics"],users:["GET /search/users"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateMembershipInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}",{},{renamed:["teams","addOrUpdateMembershipForUserInOrg"]}],addOrUpdateProjectInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}",{mediaType:{previews:["inertia"]}},{renamed:["teams","addOrUpdateProjectPermissionsInOrg"]}],addOrUpdateProjectPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}",{mediaType:{previews:["inertia"]}}],addOrUpdateRepoInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}",{},{renamed:["teams","addOrUpdateRepoPermissionsInOrg"]}],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkManagesRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}",{},{renamed:["teams","checkPermissionsForRepoInOrg"]}],checkPermissionsForProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}",{mediaType:{previews:["inertia"]}}],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],getMembershipInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}",{},{renamed:["teams","getMembershipForUserInOrg"]}],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects",{mediaType:{previews:["inertia"]}}],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeMembershipInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}",{},{renamed:["teams","removeMembershipForUserInOrg"]}],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],reviewProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}",{mediaType:{previews:["inertia"]}},{renamed:["teams","checkPermissionsForProjectInOrg"]}],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails"],addEmails:["POST /user/emails",{},{renamed:["users","addEmailsForAuthenticated"]}],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowing:["GET /user/following/{username}",{},{renamed:["users","checkPersonIsFollowedByAuthenticated"]}],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKey:["POST /user/gpg_keys",{},{renamed:["users","createGpgKeyForAuthenticated"]}],createGpgKeyForAuthenticated:["POST /user/gpg_keys"],createPublicKey:["POST /user/keys",{},{renamed:["users","createPublicSshKeyForAuthenticated"]}],createPublicSshKeyForAuthenticated:["POST /user/keys"],deleteEmailForAuthenticated:["DELETE /user/emails"],deleteEmails:["DELETE /user/emails",{},{renamed:["users","deleteEmailsForAuthenticated"]}],deleteGpgKey:["DELETE /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","deleteGpgKeyForAuthenticated"]}],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicKey:["DELETE /user/keys/{key_id}",{},{renamed:["users","deletePublicSshKeyForAuthenticated"]}],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKey:["GET /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","getGpgKeyForAuthenticated"]}],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}"],getPublicKey:["GET /user/keys/{key_id}",{},{renamed:["users","getPublicSshKeyForAuthenticated"]}],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}"],list:["GET /users"],listBlocked:["GET /user/blocks",{},{renamed:["users","listBlockedByAuthenticated"]}],listBlockedByAuthenticated:["GET /user/blocks"],listEmails:["GET /user/emails",{},{renamed:["users","listEmailsForAuthenticated"]}],listEmailsForAuthenticated:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForAuthenticatedUser:["GET /user/following",{},{renamed:["users","listFollowedByAuthenticated"]}],listFollowingForUser:["GET /users/{username}/following"],listGpgKeys:["GET /user/gpg_keys",{},{renamed:["users","listGpgKeysForAuthenticated"]}],listGpgKeysForAuthenticated:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmails:["GET /user/public_emails",{},{renamed:["users","listPublicEmailsForAuthenticatedUser"]}],listPublicEmailsForAuthenticated:["GET /user/public_emails"],listPublicKeys:["GET /user/keys",{},{renamed:["users","listPublicSshKeysForAuthenticated"]}],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility"],togglePrimaryEmailVisibility:["PATCH /user/email/visibility",{},{renamed:["users","setPrimaryEmailVisibilityForAuthenticated"]}],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}};const s="3.17.0";function endpointsToMethods(e,r){const t={};for(const[s,o]of Object.entries(r)){for(const[r,n]of Object.entries(o)){const[o,i,a]=n;const[c,p]=o.split(/ /);const l=Object.assign({method:c,url:p},i);if(!t[s]){t[s]={}}const u=t[s];if(a){u[r]=decorate(e,s,r,l,a);continue}u[r]=e.request.defaults(l)}}return t}function decorate(e,r,t,s,o){const n=e.request.defaults(s);function withDecorations(...s){let i=n.endpoint.merge(...s);if(o.mapToData){i=Object.assign({},i,{data:i[o.mapToData],[o.mapToData]:undefined});return n(i)}if(o.renamed){const[s,n]=o.renamed;e.log.warn(`octokit.${r}.${t}() has been renamed to octokit.${s}.${n}()`)}if(o.deprecated){e.log.warn(o.deprecated)}if(o.renamedParameters){const i=n.endpoint.merge(...s);for(const[s,n]of Object.entries(o.renamedParameters)){if(s in i){e.log.warn(`"${s}" parameter is deprecated for "octokit.${r}.${t}()". Use "${n}" instead`);if(!(n in i)){i[n]=i[s]}delete i[s]}}return n(i)}return n(...s)}return Object.assign(withDecorations,n)}function restEndpointMethods(e){return endpointsToMethods(e,t)}restEndpointMethods.VERSION=s;r.restEndpointMethods=restEndpointMethods},3318:(e,r,t)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});function _interopDefault(e){return e&&typeof e==="object"&&"default"in e?e["default"]:e}var s=_interopDefault(t(4824));function getUserAgent(){try{return`Node.js/${process.version.substr(1)} (${s()}; ${process.arch})`}catch(e){if(/wmic os get Caption/.test(e.message)){return"Windows <version undetectable>"}return"<environment undetectable>"}}r.getUserAgent=getUserAgent},3682:(e,r,t)=>{var s=t(4670);var o=t(5549);var n=t(6819);var i=Function.bind;var a=i.bind(i);function bindApi(e,r,t){var s=a(n,null).apply(null,t?[r,t]:[r]);e.api={remove:s};e.remove=s;["before","error","after","wrap"].forEach(function(s){var n=t?[r,s,t]:[r,s];e[s]=e.api[s]=a(o,null).apply(null,n)})}function HookSingular(){var e="h";var r={registry:{}};var t=s.bind(null,r,e);bindApi(t,r,e);return t}function HookCollection(){var e={registry:{}};var r=s.bind(null,e);bindApi(r,e);return r}var c=false;function Hook(){if(!c){console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4');c=true}return HookCollection()}Hook.Singular=HookSingular.bind();Hook.Collection=HookCollection.bind();e.exports=Hook;e.exports.Hook=Hook;e.exports.Singular=Hook.Singular;e.exports.Collection=Hook.Collection},5549:e=>{e.exports=addHook;function addHook(e,r,t,s){var o=s;if(!e.registry[t]){e.registry[t]=[]}if(r==="before"){s=function(e,r){return Promise.resolve().then(o.bind(null,r)).then(e.bind(null,r))}}if(r==="after"){s=function(e,r){var t;return Promise.resolve().then(e.bind(null,r)).then(function(e){t=e;return o(t,r)}).then(function(){return t})}}if(r==="error"){s=function(e,r){return Promise.resolve().then(e.bind(null,r)).catch(function(e){return o(e,r)})}}e.registry[t].push({hook:s,orig:o})}},4670:e=>{e.exports=register;function register(e,r,t,s){if(typeof t!=="function"){throw new Error("method for before hook must be a function")}if(!s){s={}}if(Array.isArray(r)){return r.reverse().reduce(function(r,t){return register.bind(null,e,t,r,s)},t)()}return Promise.resolve().then(function(){if(!e.registry[r]){return t(s)}return e.registry[r].reduce(function(e,r){return r.hook.bind(null,e,s)},t)()})}},6819:e=>{e.exports=removeHook;function removeHook(e,r,t){if(!e.registry[r]){return}var s=e.registry[r].map(function(e){return e.orig}).indexOf(t);if(s===-1){return}e.registry[r].splice(s,1)}},2746:(e,r,t)=>{"use strict";const s=t(3129);const o=t(6855);const n=t(4101);function spawn(e,r,t){const i=o(e,r,t);const a=s.spawn(i.command,i.args,i.options);n.hookChildProcess(a,i);return a}function spawnSync(e,r,t){const i=o(e,r,t);const a=s.spawnSync(i.command,i.args,i.options);a.error=a.error||n.verifyENOENTSync(a.status,i);return a}e.exports=spawn;e.exports.spawn=spawn;e.exports.sync=spawnSync;e.exports._parse=o;e.exports._enoent=n},4101:e=>{"use strict";const r=process.platform==="win32";function notFoundError(e,r){return Object.assign(new Error(`${r} ${e.command} ENOENT`),{code:"ENOENT",errno:"ENOENT",syscall:`${r} ${e.command}`,path:e.command,spawnargs:e.args})}function hookChildProcess(e,t){if(!r){return}const s=e.emit;e.emit=function(r,o){if(r==="exit"){const r=verifyENOENT(o,t,"spawn");if(r){return s.call(e,"error",r)}}return s.apply(e,arguments)}}function verifyENOENT(e,t){if(r&&e===1&&!t.file){return notFoundError(t.original,"spawn")}return null}function verifyENOENTSync(e,t){if(r&&e===1&&!t.file){return notFoundError(t.original,"spawnSync")}return null}e.exports={hookChildProcess:hookChildProcess,verifyENOENT:verifyENOENT,verifyENOENTSync:verifyENOENTSync,notFoundError:notFoundError}},6855:(e,r,t)=>{"use strict";const s=t(5622);const o=t(8560);const n=t(7274);const i=t(4274);const a=t(1252);const c=t(5911);const p=process.platform==="win32";const l=/\.(?:com|exe)$/i;const u=/node_modules[\\/].bin[\\/][^\\/]+\.cmd$/i;const d=o(()=>c.satisfies(process.version,"^4.8.0 || ^5.7.0 || >= 6.0.0",true))||false;function detectShebang(e){e.file=n(e);const r=e.file&&a(e.file);if(r){e.args.unshift(e.file);e.command=r;return n(e)}return e.file}function parseNonShell(e){if(!p){return e}const r=detectShebang(e);const t=!l.test(r);if(e.options.forceShell||t){const t=u.test(r);e.command=s.normalize(e.command);e.command=i.command(e.command);e.args=e.args.map(e=>i.argument(e,t));const o=[e.command].concat(e.args).join(" ");e.args=["/d","/s","/c",`"${o}"`];e.command=process.env.comspec||"cmd.exe";e.options.windowsVerbatimArguments=true}return e}function parseShell(e){if(d){return e}const r=[e.command].concat(e.args).join(" ");if(p){e.command=typeof e.options.shell==="string"?e.options.shell:process.env.comspec||"cmd.exe";e.args=["/d","/s","/c",`"${r}"`];e.options.windowsVerbatimArguments=true}else{if(typeof e.options.shell==="string"){e.command=e.options.shell}else if(process.platform==="android"){e.command="/system/bin/sh"}else{e.command="/bin/sh"}e.args=["-c",r]}return e}function parse(e,r,t){if(r&&!Array.isArray(r)){t=r;r=null}r=r?r.slice(0):[];t=Object.assign({},t);const s={command:e,args:r,options:t,file:undefined,original:{command:e,args:r}};return t.shell?parseShell(s):parseNonShell(s)}e.exports=parse},4274:e=>{"use strict";const r=/([()\][%!^"`<>&|;, *?])/g;function escapeCommand(e){e=e.replace(r,"^$1");return e}function escapeArgument(e,t){e=`${e}`;e=e.replace(/(\\*)"/g,'$1$1\\"');e=e.replace(/(\\*)$/,"$1$1");e=`"${e}"`;e=e.replace(r,"^$1");if(t){e=e.replace(r,"^$1")}return e}e.exports.command=escapeCommand;e.exports.argument=escapeArgument},1252:(e,r,t)=>{"use strict";const s=t(5747);const o=t(7032);function readShebang(e){const r=150;let t;if(Buffer.alloc){t=Buffer.alloc(r)}else{t=new Buffer(r);t.fill(0)}let n;try{n=s.openSync(e,"r");s.readSync(n,t,0,r,0);s.closeSync(n)}catch(e){}return o(t.toString())}e.exports=readShebang},7274:(e,r,t)=>{"use strict";const s=t(5622);const o=t(4207);const n=t(539)();function resolveCommandAttempt(e,r){const t=process.cwd();const i=e.options.cwd!=null;if(i){try{process.chdir(e.options.cwd)}catch(e){}}let a;try{a=o.sync(e.command,{path:(e.options.env||process.env)[n],pathExt:r?s.delimiter:undefined})}catch(e){}finally{process.chdir(t)}if(a){a=s.resolve(i?e.options.cwd:"",a)}return a}function resolveCommand(e){return resolveCommandAttempt(e)||resolveCommandAttempt(e,true)}e.exports=resolveCommand},8932:(e,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});class Deprecation extends Error{constructor(e){super(e);if(Error.captureStackTrace){Error.captureStackTrace(this,this.constructor)}this.name="Deprecation"}}r.Deprecation=Deprecation},2859:(e,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.convertChangesToDMP=convertChangesToDMP;function convertChangesToDMP(e){var r=[],t,s;for(var o=0;o<e.length;o++){t=e[o];if(t.added){s=1}else if(t.removed){s=-1}else{s=0}r.push([s,t.value])}return r}},6982:(e,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.convertChangesToXML=convertChangesToXML;function convertChangesToXML(e){var r=[];for(var t=0;t<e.length;t++){var s=e[t];if(s.added){r.push("<ins>")}else if(s.removed){r.push("<del>")}r.push(escapeHTML(s.value));if(s.added){r.push("</ins>")}else if(s.removed){r.push("</del>")}}return r.join("")}function escapeHTML(e){var r=e;r=r.replace(/&/g,"&amp;");r=r.replace(/</g,"&lt;");r=r.replace(/>/g,"&gt;");r=r.replace(/"/g,"&quot;");return r}},546:(e,r,t)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.diffArrays=diffArrays;r.arrayDiff=void 0;var s=_interopRequireDefault(t(1653));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var o=new s.default;r.arrayDiff=o;o.tokenize=function(e){return e.slice()};o.join=o.removeEmpty=function(e){return e};function diffArrays(e,r,t){return o.diff(e,r,t)}},1653:(e,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.default=Diff;function Diff(){}Diff.prototype={diff:function diff(e,r){var t=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var s=t.callback;if(typeof t==="function"){s=t;t={}}this.options=t;var o=this;function done(e){if(s){setTimeout(function(){s(undefined,e)},0);return true}else{return e}}e=this.castInput(e);r=this.castInput(r);e=this.removeEmpty(this.tokenize(e));r=this.removeEmpty(this.tokenize(r));var n=r.length,i=e.length;var a=1;var c=n+i;var p=[{newPos:-1,components:[]}];var l=this.extractCommon(p[0],r,e,0);if(p[0].newPos+1>=n&&l+1>=i){return done([{value:this.join(r),count:r.length}])}function execEditLength(){for(var t=-1*a;t<=a;t+=2){var s=void 0;var c=p[t-1],l=p[t+1],u=(l?l.newPos:0)-t;if(c){p[t-1]=undefined}var d=c&&c.newPos+1<n,m=l&&0<=u&&u<i;if(!d&&!m){p[t]=undefined;continue}if(!d||m&&c.newPos<l.newPos){s=clonePath(l);o.pushComponent(s.components,undefined,true)}else{s=c;s.newPos++;o.pushComponent(s.components,true,undefined)}u=o.extractCommon(s,r,e,t);if(s.newPos+1>=n&&u+1>=i){return done(buildValues(o,s.components,r,e,o.useLongestToken))}else{p[t]=s}}a++}if(s){(function exec(){setTimeout(function(){if(a>c){return s()}if(!execEditLength()){exec()}},0)})()}else{while(a<=c){var u=execEditLength();if(u){return u}}}},pushComponent:function pushComponent(e,r,t){var s=e[e.length-1];if(s&&s.added===r&&s.removed===t){e[e.length-1]={count:s.count+1,added:r,removed:t}}else{e.push({count:1,added:r,removed:t})}},extractCommon:function extractCommon(e,r,t,s){var o=r.length,n=t.length,i=e.newPos,a=i-s,c=0;while(i+1<o&&a+1<n&&this.equals(r[i+1],t[a+1])){i++;a++;c++}if(c){e.components.push({count:c})}e.newPos=i;return a},equals:function equals(e,r){if(this.options.comparator){return this.options.comparator(e,r)}else{return e===r||this.options.ignoreCase&&e.toLowerCase()===r.toLowerCase()}},removeEmpty:function removeEmpty(e){var r=[];for(var t=0;t<e.length;t++){if(e[t]){r.push(e[t])}}return r},castInput:function castInput(e){return e},tokenize:function tokenize(e){return e.split("")},join:function join(e){return e.join("")}};function buildValues(e,r,t,s,o){var n=0,i=r.length,a=0,c=0;for(;n<i;n++){var p=r[n];if(!p.removed){if(!p.added&&o){var l=t.slice(a,a+p.count);l=l.map(function(e,r){var t=s[c+r];return t.length>e.length?t:e});p.value=e.join(l)}else{p.value=e.join(t.slice(a,a+p.count))}a+=p.count;if(!p.added){c+=p.count}}else{p.value=e.join(s.slice(c,c+p.count));c+=p.count;if(n&&r[n-1].added){var u=r[n-1];r[n-1]=r[n];r[n]=u}}}var d=r[i-1];if(i>1&&typeof d.value==="string"&&(d.added||d.removed)&&e.equals("",d.value)){r[i-2].value+=d.value;r.pop()}return r}function clonePath(e){return{newPos:e.newPos,components:e.components.slice(0)}}},2081:(e,r,t)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.diffChars=diffChars;r.characterDiff=void 0;var s=_interopRequireDefault(t(1653));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var o=new s.default;r.characterDiff=o;function diffChars(e,r,t){return o.diff(e,r,t)}},8941:(e,r,t)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.diffCss=diffCss;r.cssDiff=void 0;var s=_interopRequireDefault(t(1653));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var o=new s.default;r.cssDiff=o;o.tokenize=function(e){return e.split(/([{}:;,]|\s+)/)};function diffCss(e,r,t){return o.diff(e,r,t)}},6335:(e,r,t)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.diffJson=diffJson;r.canonicalize=canonicalize;r.jsonDiff=void 0;var s=_interopRequireDefault(t(1653));var o=t(1591);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _typeof(e){if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function _typeof(e){return typeof e}}else{_typeof=function _typeof(e){return e&&typeof Symbol==="function"&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e}}return _typeof(e)}var n=Object.prototype.toString;var i=new s.default;r.jsonDiff=i;i.useLongestToken=true;i.tokenize=o.lineDiff.tokenize;i.castInput=function(e){var r=this.options,t=r.undefinedReplacement,s=r.stringifyReplacer,o=s===void 0?function(e,r){return typeof r==="undefined"?t:r}:s;return typeof e==="string"?e:JSON.stringify(canonicalize(e,null,null,o),o,"  ")};i.equals=function(e,r){return s.default.prototype.equals.call(i,e.replace(/,([\r\n])/g,"$1"),r.replace(/,([\r\n])/g,"$1"))};function diffJson(e,r,t){return i.diff(e,r,t)}function canonicalize(e,r,t,s,o){r=r||[];t=t||[];if(s){e=s(o,e)}var i;for(i=0;i<r.length;i+=1){if(r[i]===e){return t[i]}}var a;if("[object Array]"===n.call(e)){r.push(e);a=new Array(e.length);t.push(a);for(i=0;i<e.length;i+=1){a[i]=canonicalize(e[i],r,t,s,o)}r.pop();t.pop();return a}if(e&&e.toJSON){e=e.toJSON()}if(_typeof(e)==="object"&&e!==null){r.push(e);a={};t.push(a);var c=[],p;for(p in e){if(e.hasOwnProperty(p)){c.push(p)}}c.sort();for(i=0;i<c.length;i+=1){p=c[i];a[p]=canonicalize(e[p],r,t,s,p)}r.pop();t.pop()}else{a=e}return a}},1591:(e,r,t)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.diffLines=diffLines;r.diffTrimmedLines=diffTrimmedLines;r.lineDiff=void 0;var s=_interopRequireDefault(t(1653));var o=t(5704);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var n=new s.default;r.lineDiff=n;n.tokenize=function(e){var r=[],t=e.split(/(\n|\r\n)/);if(!t[t.length-1]){t.pop()}for(var s=0;s<t.length;s++){var o=t[s];if(s%2&&!this.options.newlineIsToken){r[r.length-1]+=o}else{if(this.options.ignoreWhitespace){o=o.trim()}r.push(o)}}return r};function diffLines(e,r,t){return n.diff(e,r,t)}function diffTrimmedLines(e,r,t){var s=(0,o.generateOptions)(t,{ignoreWhitespace:true});return n.diff(e,r,s)}},3577:(e,r,t)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.diffSentences=diffSentences;r.sentenceDiff=void 0;var s=_interopRequireDefault(t(1653));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var o=new s.default;r.sentenceDiff=o;o.tokenize=function(e){return e.split(/(\S.+?[.!?])(?=\s+|$)/)};function diffSentences(e,r,t){return o.diff(e,r,t)}},6992:(e,r,t)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.diffWords=diffWords;r.diffWordsWithSpace=diffWordsWithSpace;r.wordDiff=void 0;var s=_interopRequireDefault(t(1653));var o=t(5704);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var n=/^[A-Za-z\xC0-\u02C6\u02C8-\u02D7\u02DE-\u02FF\u1E00-\u1EFF]+$/;var i=/\S/;var a=new s.default;r.wordDiff=a;a.equals=function(e,r){if(this.options.ignoreCase){e=e.toLowerCase();r=r.toLowerCase()}return e===r||this.options.ignoreWhitespace&&!i.test(e)&&!i.test(r)};a.tokenize=function(e){var r=e.split(/(\s+|[()[\]{}'"]|\b)/);for(var t=0;t<r.length-1;t++){if(!r[t+1]&&r[t+2]&&n.test(r[t])&&n.test(r[t+2])){r[t]+=r[t+2];r.splice(t+1,2);t--}}return r};function diffWords(e,r,t){t=(0,o.generateOptions)(t,{ignoreWhitespace:true});return a.diff(e,r,t)}function diffWordsWithSpace(e,r,t){return a.diff(e,r,t)}},1672:(e,r,t)=>{"use strict";var s;s={value:true};s={enumerable:true,get:function get(){return o.default}};s={enumerable:true,get:function get(){return n.diffChars}};s={enumerable:true,get:function get(){return i.diffWords}};s={enumerable:true,get:function get(){return i.diffWordsWithSpace}};s={enumerable:true,get:function get(){return a.diffLines}};s={enumerable:true,get:function get(){return a.diffTrimmedLines}};s={enumerable:true,get:function get(){return c.diffSentences}};s={enumerable:true,get:function get(){return p.diffCss}};s={enumerable:true,get:function get(){return l.diffJson}};s={enumerable:true,get:function get(){return l.canonicalize}};s={enumerable:true,get:function get(){return u.diffArrays}};s={enumerable:true,get:function get(){return d.applyPatch}};s={enumerable:true,get:function get(){return d.applyPatches}};Object.defineProperty(r,"G8",{enumerable:true,get:function get(){return m.parsePatch}});s={enumerable:true,get:function get(){return f.merge}};s={enumerable:true,get:function get(){return g.structuredPatch}};s={enumerable:true,get:function get(){return g.createTwoFilesPatch}};s={enumerable:true,get:function get(){return g.createPatch}};s={enumerable:true,get:function get(){return h.convertChangesToDMP}};s={enumerable:true,get:function get(){return T.convertChangesToXML}};var o=_interopRequireDefault(t(1653));var n=t(2081);var i=t(6992);var a=t(1591);var c=t(3577);var p=t(8941);var l=t(6335);var u=t(546);var d=t(7429);var m=t(5870);var f=t(2640);var g=t(4543);var h=t(2859);var T=t(6982);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}},7429:(e,r,t)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.applyPatch=applyPatch;r.applyPatches=applyPatches;var s=t(5870);var o=_interopRequireDefault(t(5512));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function applyPatch(e,r){var t=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};if(typeof r==="string"){r=(0,s.parsePatch)(r)}if(Array.isArray(r)){if(r.length>1){throw new Error("applyPatch only works with a single input.")}r=r[0]}var n=e.split(/\r\n|[\n\v\f\r\x85]/),i=e.match(/\r\n|[\n\v\f\r\x85]/g)||[],a=r.hunks,c=t.compareLine||function(e,r,t,s){return r===s},p=0,l=t.fuzzFactor||0,u=0,d=0,m,f;function hunkFits(e,r){for(var t=0;t<e.lines.length;t++){var s=e.lines[t],o=s.length>0?s[0]:" ",i=s.length>0?s.substr(1):s;if(o===" "||o==="-"){if(!c(r+1,n[r],o,i)){p++;if(p>l){return false}}r++}}return true}for(var g=0;g<a.length;g++){var h=a[g],T=n.length-h.oldLines,w=0,E=d+h.oldStart-1;var b=(0,o.default)(E,u,T);for(;w!==undefined;w=b()){if(hunkFits(h,E+w)){h.offset=d+=w;break}}if(w===undefined){return false}u=h.offset+h.oldStart+h.oldLines}var v=0;for(var y=0;y<a.length;y++){var _=a[y],P=_.oldStart+_.offset+v-1;v+=_.newLines-_.oldLines;if(P<0){P=0}for(var O=0;O<_.lines.length;O++){var S=_.lines[O],G=S.length>0?S[0]:" ",A=S.length>0?S.substr(1):S,R=_.linedelimiters[O];if(G===" "){P++}else if(G==="-"){n.splice(P,1);i.splice(P,1)}else if(G==="+"){n.splice(P,0,A);i.splice(P,0,R);P++}else if(G==="\\"){var k=_.lines[O-1]?_.lines[O-1][0]:null;if(k==="+"){m=true}else if(k==="-"){f=true}}}}if(m){while(!n[n.length-1]){n.pop();i.pop()}}else if(f){n.push("");i.push("\n")}for(var C=0;C<n.length-1;C++){n[C]=n[C]+i[C]}return n.join("")}function applyPatches(e,r){if(typeof e==="string"){e=(0,s.parsePatch)(e)}var t=0;function processIndex(){var s=e[t++];if(!s){return r.complete()}r.loadFile(s,function(e,t){if(e){return r.complete(e)}var o=applyPatch(t,s,r);r.patched(s,o,function(e){if(e){return r.complete(e)}processIndex()})})}processIndex()}},4543:(e,r,t)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.structuredPatch=structuredPatch;r.createTwoFilesPatch=createTwoFilesPatch;r.createPatch=createPatch;var s=t(1591);function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(e){if(Symbol.iterator in Object(e)||Object.prototype.toString.call(e)==="[object Arguments]")return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e)){for(var r=0,t=new Array(e.length);r<e.length;r++){t[r]=e[r]}return t}}function structuredPatch(e,r,t,o,n,i,a){if(!a){a={}}if(typeof a.context==="undefined"){a.context=4}var c=(0,s.diffLines)(t,o,a);c.push({value:"",lines:[]});function contextLines(e){return e.map(function(e){return" "+e})}var p=[];var l=0,u=0,d=[],m=1,f=1;var g=function _loop(e){var r=c[e],s=r.lines||r.value.replace(/\n$/,"").split("\n");r.lines=s;if(r.added||r.removed){var n;if(!l){var i=c[e-1];l=m;u=f;if(i){d=a.context>0?contextLines(i.lines.slice(-a.context)):[];l-=d.length;u-=d.length}}(n=d).push.apply(n,_toConsumableArray(s.map(function(e){return(r.added?"+":"-")+e})));if(r.added){f+=s.length}else{m+=s.length}}else{if(l){if(s.length<=a.context*2&&e<c.length-2){var g;(g=d).push.apply(g,_toConsumableArray(contextLines(s)))}else{var h;var T=Math.min(s.length,a.context);(h=d).push.apply(h,_toConsumableArray(contextLines(s.slice(0,T))));var w={oldStart:l,oldLines:m-l+T,newStart:u,newLines:f-u+T,lines:d};if(e>=c.length-2&&s.length<=a.context){var E=/\n$/.test(t);var b=/\n$/.test(o);var v=s.length==0&&d.length>w.oldLines;if(!E&&v){d.splice(w.oldLines,0,"\\ No newline at end of file")}if(!E&&!v||!b){d.push("\\ No newline at end of file")}}p.push(w);l=0;u=0;d=[]}}m+=s.length;f+=s.length}};for(var h=0;h<c.length;h++){g(h)}return{oldFileName:e,newFileName:r,oldHeader:n,newHeader:i,hunks:p}}function createTwoFilesPatch(e,r,t,s,o,n,i){var a=structuredPatch(e,r,t,s,o,n,i);var c=[];if(e==r){c.push("Index: "+e)}c.push("===================================================================");c.push("--- "+a.oldFileName+(typeof a.oldHeader==="undefined"?"":"\t"+a.oldHeader));c.push("+++ "+a.newFileName+(typeof a.newHeader==="undefined"?"":"\t"+a.newHeader));for(var p=0;p<a.hunks.length;p++){var l=a.hunks[p];c.push("@@ -"+l.oldStart+","+l.oldLines+" +"+l.newStart+","+l.newLines+" @@");c.push.apply(c,l.lines)}return c.join("\n")+"\n"}function createPatch(e,r,t,s,o,n){return createTwoFilesPatch(e,e,r,t,s,o,n)}},2640:(e,r,t)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.calcLineCount=calcLineCount;r.merge=merge;var s=t(4543);var o=t(5870);var n=t(8935);function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(e){if(Symbol.iterator in Object(e)||Object.prototype.toString.call(e)==="[object Arguments]")return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e)){for(var r=0,t=new Array(e.length);r<e.length;r++){t[r]=e[r]}return t}}function calcLineCount(e){var r=calcOldNewLineCount(e.lines),t=r.oldLines,s=r.newLines;if(t!==undefined){e.oldLines=t}else{delete e.oldLines}if(s!==undefined){e.newLines=s}else{delete e.newLines}}function merge(e,r,t){e=loadPatch(e,t);r=loadPatch(r,t);var s={};if(e.index||r.index){s.index=e.index||r.index}if(e.newFileName||r.newFileName){if(!fileNameChanged(e)){s.oldFileName=r.oldFileName||e.oldFileName;s.newFileName=r.newFileName||e.newFileName;s.oldHeader=r.oldHeader||e.oldHeader;s.newHeader=r.newHeader||e.newHeader}else if(!fileNameChanged(r)){s.oldFileName=e.oldFileName;s.newFileName=e.newFileName;s.oldHeader=e.oldHeader;s.newHeader=e.newHeader}else{s.oldFileName=selectField(s,e.oldFileName,r.oldFileName);s.newFileName=selectField(s,e.newFileName,r.newFileName);s.oldHeader=selectField(s,e.oldHeader,r.oldHeader);s.newHeader=selectField(s,e.newHeader,r.newHeader)}}s.hunks=[];var o=0,n=0,i=0,a=0;while(o<e.hunks.length||n<r.hunks.length){var c=e.hunks[o]||{oldStart:Infinity},p=r.hunks[n]||{oldStart:Infinity};if(hunkBefore(c,p)){s.hunks.push(cloneHunk(c,i));o++;a+=c.newLines-c.oldLines}else if(hunkBefore(p,c)){s.hunks.push(cloneHunk(p,a));n++;i+=p.newLines-p.oldLines}else{var l={oldStart:Math.min(c.oldStart,p.oldStart),oldLines:0,newStart:Math.min(c.newStart+i,p.oldStart+a),newLines:0,lines:[]};mergeLines(l,c.oldStart,c.lines,p.oldStart,p.lines);n++;o++;s.hunks.push(l)}}return s}function loadPatch(e,r){if(typeof e==="string"){if(/^@@/m.test(e)||/^Index:/m.test(e)){return(0,o.parsePatch)(e)[0]}if(!r){throw new Error("Must provide a base reference or pass in a patch")}return(0,s.structuredPatch)(undefined,undefined,r,e)}return e}function fileNameChanged(e){return e.newFileName&&e.newFileName!==e.oldFileName}function selectField(e,r,t){if(r===t){return r}else{e.conflict=true;return{mine:r,theirs:t}}}function hunkBefore(e,r){return e.oldStart<r.oldStart&&e.oldStart+e.oldLines<r.oldStart}function cloneHunk(e,r){return{oldStart:e.oldStart,oldLines:e.oldLines,newStart:e.newStart+r,newLines:e.newLines,lines:e.lines}}function mergeLines(e,r,t,s,o){var n={offset:r,lines:t,index:0},i={offset:s,lines:o,index:0};insertLeading(e,n,i);insertLeading(e,i,n);while(n.index<n.lines.length&&i.index<i.lines.length){var a=n.lines[n.index],c=i.lines[i.index];if((a[0]==="-"||a[0]==="+")&&(c[0]==="-"||c[0]==="+")){mutualChange(e,n,i)}else if(a[0]==="+"&&c[0]===" "){var p;(p=e.lines).push.apply(p,_toConsumableArray(collectChange(n)))}else if(c[0]==="+"&&a[0]===" "){var l;(l=e.lines).push.apply(l,_toConsumableArray(collectChange(i)))}else if(a[0]==="-"&&c[0]===" "){removal(e,n,i)}else if(c[0]==="-"&&a[0]===" "){removal(e,i,n,true)}else if(a===c){e.lines.push(a);n.index++;i.index++}else{conflict(e,collectChange(n),collectChange(i))}}insertTrailing(e,n);insertTrailing(e,i);calcLineCount(e)}function mutualChange(e,r,t){var s=collectChange(r),o=collectChange(t);if(allRemoves(s)&&allRemoves(o)){if((0,n.arrayStartsWith)(s,o)&&skipRemoveSuperset(t,s,s.length-o.length)){var i;(i=e.lines).push.apply(i,_toConsumableArray(s));return}else if((0,n.arrayStartsWith)(o,s)&&skipRemoveSuperset(r,o,o.length-s.length)){var a;(a=e.lines).push.apply(a,_toConsumableArray(o));return}}else if((0,n.arrayEqual)(s,o)){var c;(c=e.lines).push.apply(c,_toConsumableArray(s));return}conflict(e,s,o)}function removal(e,r,t,s){var o=collectChange(r),n=collectContext(t,o);if(n.merged){var i;(i=e.lines).push.apply(i,_toConsumableArray(n.merged))}else{conflict(e,s?n:o,s?o:n)}}function conflict(e,r,t){e.conflict=true;e.lines.push({conflict:true,mine:r,theirs:t})}function insertLeading(e,r,t){while(r.offset<t.offset&&r.index<r.lines.length){var s=r.lines[r.index++];e.lines.push(s);r.offset++}}function insertTrailing(e,r){while(r.index<r.lines.length){var t=r.lines[r.index++];e.lines.push(t)}}function collectChange(e){var r=[],t=e.lines[e.index][0];while(e.index<e.lines.length){var s=e.lines[e.index];if(t==="-"&&s[0]==="+"){t="+"}if(t===s[0]){r.push(s);e.index++}else{break}}return r}function collectContext(e,r){var t=[],s=[],o=0,n=false,i=false;while(o<r.length&&e.index<e.lines.length){var a=e.lines[e.index],c=r[o];if(c[0]==="+"){break}n=n||a[0]!==" ";s.push(c);o++;if(a[0]==="+"){i=true;while(a[0]==="+"){t.push(a);a=e.lines[++e.index]}}if(c.substr(1)===a.substr(1)){t.push(a);e.index++}else{i=true}}if((r[o]||"")[0]==="+"&&n){i=true}if(i){return t}while(o<r.length){s.push(r[o++])}return{merged:s,changes:t}}function allRemoves(e){return e.reduce(function(e,r){return e&&r[0]==="-"},true)}function skipRemoveSuperset(e,r,t){for(var s=0;s<t;s++){var o=r[r.length-t+s].substr(1);if(e.lines[e.index+s]!==" "+o){return false}}e.index+=t;return true}function calcOldNewLineCount(e){var r=0;var t=0;e.forEach(function(e){if(typeof e!=="string"){var s=calcOldNewLineCount(e.mine);var o=calcOldNewLineCount(e.theirs);if(r!==undefined){if(s.oldLines===o.oldLines){r+=s.oldLines}else{r=undefined}}if(t!==undefined){if(s.newLines===o.newLines){t+=s.newLines}else{t=undefined}}}else{if(t!==undefined&&(e[0]==="+"||e[0]===" ")){t++}if(r!==undefined&&(e[0]==="-"||e[0]===" ")){r++}}});return{oldLines:r,newLines:t}}},5870:(e,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.parsePatch=parsePatch;function parsePatch(e){var r=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var t=e.split(/\r\n|[\n\v\f\r\x85]/),s=e.match(/\r\n|[\n\v\f\r\x85]/g)||[],o=[],n=0;function parseIndex(){var e={};o.push(e);while(n<t.length){var s=t[n];if(/^(\-\-\-|\+\+\+|@@)\s/.test(s)){break}var i=/^(?:Index:|diff(?: -r \w+)+)\s+(.+?)\s*$/.exec(s);if(i){e.index=i[1]}n++}parseFileHeader(e);parseFileHeader(e);e.hunks=[];while(n<t.length){var a=t[n];if(/^(Index:|diff|\-\-\-|\+\+\+)\s/.test(a)){break}else if(/^@@/.test(a)){e.hunks.push(parseHunk())}else if(a&&r.strict){throw new Error("Unknown line "+(n+1)+" "+JSON.stringify(a))}else{n++}}}function parseFileHeader(e){var r=/^(---|\+\+\+)\s+(.*)$/.exec(t[n]);if(r){var s=r[1]==="---"?"old":"new";var o=r[2].split("\t",2);var i=o[0].replace(/\\\\/g,"\\");if(/^".*"$/.test(i)){i=i.substr(1,i.length-2)}e[s+"FileName"]=i;e[s+"Header"]=(o[1]||"").trim();n++}}function parseHunk(){var e=n,o=t[n++],i=o.split(/@@ -(\d+)(?:,(\d+))? \+(\d+)(?:,(\d+))? @@/);var a={oldStart:+i[1],oldLines:+i[2]||1,newStart:+i[3],newLines:+i[4]||1,lines:[],linedelimiters:[]};var c=0,p=0;for(;n<t.length;n++){if(t[n].indexOf("--- ")===0&&n+2<t.length&&t[n+1].indexOf("+++ ")===0&&t[n+2].indexOf("@@")===0){break}var l=t[n].length==0&&n!=t.length-1?" ":t[n][0];if(l==="+"||l==="-"||l===" "||l==="\\"){a.lines.push(t[n]);a.linedelimiters.push(s[n]||"\n");if(l==="+"){c++}else if(l==="-"){p++}else if(l===" "){c++;p++}}else{break}}if(!c&&a.newLines===1){a.newLines=0}if(!p&&a.oldLines===1){a.oldLines=0}if(r.strict){if(c!==a.newLines){throw new Error("Added line count did not match for hunk at line "+(e+1))}if(p!==a.oldLines){throw new Error("Removed line count did not match for hunk at line "+(e+1))}}return a}while(n<t.length){parseIndex()}return o}},8935:(e,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.arrayEqual=arrayEqual;r.arrayStartsWith=arrayStartsWith;function arrayEqual(e,r){if(e.length!==r.length){return false}return arrayStartsWith(e,r)}function arrayStartsWith(e,r){if(r.length>e.length){return false}for(var t=0;t<r.length;t++){if(r[t]!==e[t]){return false}}return true}},5512:(e,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.default=_default;function _default(e,r,t){var s=true,o=false,n=false,i=1;return function iterator(){if(s&&!n){if(o){i++}else{s=false}if(e+i<=t){return i}n=true}if(!o){if(!n){s=true}if(r<=e-i){return-i++}o=true;return iterator()}}}},5704:(e,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});r.generateOptions=generateOptions;function generateOptions(e,r){if(typeof e==="function"){r.callback=e}else if(e){for(var t in e){if(e.hasOwnProperty(t)){r[t]=e[t]}}}return r}},1205:(e,r,t)=>{var s=t(1223);var o=function(){};var n=function(e){return e.setHeader&&typeof e.abort==="function"};var i=function(e){return e.stdio&&Array.isArray(e.stdio)&&e.stdio.length===3};var a=function(e,r,t){if(typeof r==="function")return a(e,null,r);if(!r)r={};t=s(t||o);var c=e._writableState;var p=e._readableState;var l=r.readable||r.readable!==false&&e.readable;var u=r.writable||r.writable!==false&&e.writable;var d=false;var m=function(){if(!e.writable)f()};var f=function(){u=false;if(!l)t.call(e)};var g=function(){l=false;if(!u)t.call(e)};var h=function(r){t.call(e,r?new Error("exited with error code: "+r):null)};var T=function(r){t.call(e,r)};var w=function(){process.nextTick(E)};var E=function(){if(d)return;if(l&&!(p&&(p.ended&&!p.destroyed)))return t.call(e,new Error("premature close"));if(u&&!(c&&(c.ended&&!c.destroyed)))return t.call(e,new Error("premature close"))};var b=function(){e.req.on("finish",f)};if(n(e)){e.on("complete",f);e.on("abort",w);if(e.req)b();else e.on("request",b)}else if(u&&!c){e.on("end",m);e.on("close",m)}if(i(e))e.on("exit",h);e.on("end",g);e.on("finish",f);if(r.error!==false)e.on("error",T);e.on("close",w);return function(){d=true;e.removeListener("complete",f);e.removeListener("abort",w);e.removeListener("request",b);if(e.req)e.req.removeListener("finish",f);e.removeListener("end",m);e.removeListener("close",m);e.removeListener("finish",f);e.removeListener("exit",h);e.removeListener("end",g);e.removeListener("error",T);e.removeListener("close",w)}};e.exports=a},5447:(e,r,t)=>{"use strict";const s=t(5622);const o=t(3129);const n=t(2746);const i=t(5515);const a=t(502);const c=t(1554);const p=t(1766);const l=t(1330);const u=t(4931);const d=t(4689);const m=t(166);const f=1e3*1e3*10;function handleArgs(e,r,t){let o;t=Object.assign({extendEnv:true,env:{}},t);if(t.extendEnv){t.env=Object.assign({},process.env,t.env)}if(t.__winShell===true){delete t.__winShell;o={command:e,args:r,options:t,file:e,original:{cmd:e,args:r}}}else{o=n._parse(e,r,t)}t=Object.assign({maxBuffer:f,buffer:true,stripEof:true,preferLocal:true,localDir:o.options.cwd||process.cwd(),encoding:"utf8",reject:true,cleanup:true},o.options);t.stdio=m(t);if(t.preferLocal){t.env=a.env(Object.assign({},t,{cwd:t.localDir}))}if(t.detached){t.cleanup=false}if(process.platform==="win32"&&s.basename(o.command)==="cmd.exe"){o.args.unshift("/q")}return{cmd:o.command,args:o.args,opts:t,parsed:o}}function handleInput(e,r){if(r===null||r===undefined){return}if(c(r)){r.pipe(e.stdin)}else{e.stdin.end(r)}}function handleOutput(e,r){if(r&&e.stripEof){r=i(r)}return r}function handleShell(e,r,t){let s="/bin/sh";let o=["-c",r];t=Object.assign({},t);if(process.platform==="win32"){t.__winShell=true;s=process.env.comspec||"cmd.exe";o=["/s","/c",`"${r}"`];t.windowsVerbatimArguments=true}if(t.shell){s=t.shell;delete t.shell}return e(s,o,t)}function getStream(e,r,{encoding:t,buffer:s,maxBuffer:o}){if(!e[r]){return null}let n;if(!s){n=new Promise((t,s)=>{e[r].once("end",t).once("error",s)})}else if(t){n=p(e[r],{encoding:t,maxBuffer:o})}else{n=p.buffer(e[r],{maxBuffer:o})}return n.catch(e=>{e.stream=r;e.message=`${r} ${e.message}`;throw e})}function makeError(e,r){const{stdout:t,stderr:s}=e;let o=e.error;const{code:n,signal:i}=e;const{parsed:a,joinedCmd:c}=r;const p=r.timedOut||false;if(!o){let e="";if(Array.isArray(a.opts.stdio)){if(a.opts.stdio[2]!=="inherit"){e+=e.length>0?s:`\n${s}`}if(a.opts.stdio[1]!=="inherit"){e+=`\n${t}`}}else if(a.opts.stdio!=="inherit"){e=`\n${s}${t}`}o=new Error(`Command failed: ${c}${e}`);o.code=n<0?d(n):n}o.stdout=t;o.stderr=s;o.failed=true;o.signal=i||null;o.cmd=c;o.timedOut=p;return o}function joinCmd(e,r){let t=e;if(Array.isArray(r)&&r.length>0){t+=" "+r.join(" ")}return t}e.exports=((e,r,t)=>{const s=handleArgs(e,r,t);const{encoding:i,buffer:a,maxBuffer:c}=s.opts;const p=joinCmd(e,r);let d;try{d=o.spawn(s.cmd,s.args,s.opts)}catch(e){return Promise.reject(e)}let m;if(s.opts.cleanup){m=u(()=>{d.kill()})}let f=null;let g=false;const h=()=>{if(f){clearTimeout(f);f=null}if(m){m()}};if(s.opts.timeout>0){f=setTimeout(()=>{f=null;g=true;d.kill(s.opts.killSignal)},s.opts.timeout)}const T=new Promise(e=>{d.on("exit",(r,t)=>{h();e({code:r,signal:t})});d.on("error",r=>{h();e({error:r})});if(d.stdin){d.stdin.on("error",r=>{h();e({error:r})})}});function destroy(){if(d.stdout){d.stdout.destroy()}if(d.stderr){d.stderr.destroy()}}const w=()=>l(Promise.all([T,getStream(d,"stdout",{encoding:i,buffer:a,maxBuffer:c}),getStream(d,"stderr",{encoding:i,buffer:a,maxBuffer:c})]).then(e=>{const r=e[0];r.stdout=e[1];r.stderr=e[2];if(r.error||r.code!==0||r.signal!==null){const e=makeError(r,{joinedCmd:p,parsed:s,timedOut:g});e.killed=e.killed||d.killed;if(!s.opts.reject){return e}throw e}return{stdout:handleOutput(s.opts,r.stdout),stderr:handleOutput(s.opts,r.stderr),code:0,failed:false,killed:false,signal:null,cmd:p,timedOut:false}}),destroy);n._enoent.hookChildProcess(d,s.parsed);handleInput(d,s.opts.input);d.then=((e,r)=>w().then(e,r));d.catch=(e=>w().catch(e));return d});e.exports.stdout=((...r)=>e.exports(...r).then(e=>e.stdout));e.exports.stderr=((...r)=>e.exports(...r).then(e=>e.stderr));e.exports.shell=((r,t)=>handleShell(e.exports,r,t));e.exports.sync=((e,r,t)=>{const s=handleArgs(e,r,t);const n=joinCmd(e,r);if(c(s.opts.input)){throw new TypeError("The `input` option cannot be a stream in sync mode")}const i=o.spawnSync(s.cmd,s.args,s.opts);i.code=i.status;if(i.error||i.status!==0||i.signal!==null){const e=makeError(i,{joinedCmd:n,parsed:s});if(!s.opts.reject){return e}throw e}return{stdout:handleOutput(s.opts,i.stdout),stderr:handleOutput(s.opts,i.stderr),code:0,failed:false,signal:null,cmd:n,timedOut:false}});e.exports.shellSync=((r,t)=>handleShell(e.exports.sync,r,t))},4689:(e,r,t)=>{"use strict";const s=t(1669);let o;if(typeof s.getSystemErrorName==="function"){e.exports=s.getSystemErrorName}else{try{o=process.binding("uv");if(typeof o.errname!=="function"){throw new TypeError("uv.errname is not a function")}}catch(e){console.error("execa/lib/errname: unable to establish process.binding('uv')",e);o=null}e.exports=(e=>errname(o,e))}e.exports.__test__=errname;function errname(e,r){if(e){return e.errname(r)}if(!(r<0)){throw new Error("err >= 0")}return`Unknown system error ${r}`}},166:e=>{"use strict";const r=["stdin","stdout","stderr"];const t=e=>r.some(r=>Boolean(e[r]));e.exports=(e=>{if(!e){return null}if(e.stdio&&t(e)){throw new Error(`It's not possible to provide \`stdio\` in combination with one of ${r.map(e=>`\`${e}\``).join(", ")}`)}if(typeof e.stdio==="string"){return e.stdio}const s=e.stdio||[];if(!Array.isArray(s)){throw new TypeError(`Expected \`stdio\` to be of type \`string\` or \`Array\`, got \`${typeof s}\``)}const o=[];const n=Math.max(s.length,r.length);for(let t=0;t<n;t++){let n=null;if(s[t]!==undefined){n=s[t]}else if(e[r[t]]!==undefined){n=e[r[t]]}o[t]=n}return o})},1585:(e,r,t)=>{"use strict";const{PassThrough:s}=t(2413);e.exports=(e=>{e=Object.assign({},e);const{array:r}=e;let{encoding:t}=e;const o=t==="buffer";let n=false;if(r){n=!(t||o)}else{t=t||"utf8"}if(o){t=null}let i=0;const a=[];const c=new s({objectMode:n});if(t){c.setEncoding(t)}c.on("data",e=>{a.push(e);if(n){i=a.length}else{i+=e.length}});c.getBufferedValue=(()=>{if(r){return a}return o?Buffer.concat(a,i):a.join("")});c.getBufferedLength=(()=>i);return c})},1766:(e,r,t)=>{"use strict";const s=t(8341);const o=t(1585);class MaxBufferError extends Error{constructor(){super("maxBuffer exceeded");this.name="MaxBufferError"}}function getStream(e,r){if(!e){return Promise.reject(new Error("Expected a stream"))}r=Object.assign({maxBuffer:Infinity},r);const{maxBuffer:t}=r;let n;return new Promise((i,a)=>{const c=e=>{if(e){e.bufferedData=n.getBufferedValue()}a(e)};n=s(e,o(r),e=>{if(e){c(e);return}i()});n.on("data",()=>{if(n.getBufferedLength()>t){c(new MaxBufferError)}})}).then(()=>n.getBufferedValue())}e.exports=getStream;e.exports.buffer=((e,r)=>getStream(e,Object.assign({},r,{encoding:"buffer"})));e.exports.array=((e,r)=>getStream(e,Object.assign({},r,{array:true})));e.exports.MaxBufferError=MaxBufferError},3287:(e,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});function isObject(e){return Object.prototype.toString.call(e)==="[object Object]"}function isPlainObject(e){var r,t;if(isObject(e)===false)return false;r=e.constructor;if(r===undefined)return true;t=r.prototype;if(isObject(t)===false)return false;if(t.hasOwnProperty("isPrototypeOf")===false){return false}return true}r.isPlainObject=isPlainObject},1554:e=>{"use strict";var r=e.exports=function(e){return e!==null&&typeof e==="object"&&typeof e.pipe==="function"};r.writable=function(e){return r(e)&&e.writable!==false&&typeof e._write==="function"&&typeof e._writableState==="object"};r.readable=function(e){return r(e)&&e.readable!==false&&typeof e._read==="function"&&typeof e._readableState==="object"};r.duplex=function(e){return r.writable(e)&&r.readable(e)};r.transform=function(e){return r.duplex(e)&&typeof e._transform==="function"&&typeof e._transformState==="object"}},7126:(e,r,t)=>{var s=t(5747);var o;if(process.platform==="win32"||global.TESTING_WINDOWS){o=t(2001)}else{o=t(9728)}e.exports=isexe;isexe.sync=sync;function isexe(e,r,t){if(typeof r==="function"){t=r;r={}}if(!t){if(typeof Promise!=="function"){throw new TypeError("callback not provided")}return new Promise(function(t,s){isexe(e,r||{},function(e,r){if(e){s(e)}else{t(r)}})})}o(e,r||{},function(e,s){if(e){if(e.code==="EACCES"||r&&r.ignoreErrors){e=null;s=false}}t(e,s)})}function sync(e,r){try{return o.sync(e,r||{})}catch(e){if(r&&r.ignoreErrors||e.code==="EACCES"){return false}else{throw e}}}},9728:(e,r,t)=>{e.exports=isexe;isexe.sync=sync;var s=t(5747);function isexe(e,r,t){s.stat(e,function(e,s){t(e,e?false:checkStat(s,r))})}function sync(e,r){return checkStat(s.statSync(e),r)}function checkStat(e,r){return e.isFile()&&checkMode(e,r)}function checkMode(e,r){var t=e.mode;var s=e.uid;var o=e.gid;var n=r.uid!==undefined?r.uid:process.getuid&&process.getuid();var i=r.gid!==undefined?r.gid:process.getgid&&process.getgid();var a=parseInt("100",8);var c=parseInt("010",8);var p=parseInt("001",8);var l=a|c;var u=t&p||t&c&&o===i||t&a&&s===n||t&l&&n===0;return u}},2001:(e,r,t)=>{e.exports=isexe;isexe.sync=sync;var s=t(5747);function checkPathExt(e,r){var t=r.pathExt!==undefined?r.pathExt:process.env.PATHEXT;if(!t){return true}t=t.split(";");if(t.indexOf("")!==-1){return true}for(var s=0;s<t.length;s++){var o=t[s].toLowerCase();if(o&&e.substr(-o.length).toLowerCase()===o){return true}}return false}function checkStat(e,r,t){if(!e.isSymbolicLink()&&!e.isFile()){return false}return checkPathExt(r,t)}function isexe(e,r,t){s.stat(e,function(s,o){t(s,s?false:checkStat(o,e,r))})}function sync(e,r){return checkStat(s.statSync(e),e,r)}},7493:(e,r,t)=>{"use strict";const s=t(2087);const o=new Map([[20,["Big Sur","11"]],[19,["Catalina","10.15"]],[18,["Mojave","10.14"]],[17,["High Sierra","10.13"]],[16,["Sierra","10.12"]],[15,["El Capitan","10.11"]],[14,["Yosemite","10.10"]],[13,["Mavericks","10.9"]],[12,["Mountain Lion","10.8"]],[11,["Lion","10.7"]],[10,["Snow Leopard","10.6"]],[9,["Leopard","10.5"]],[8,["Tiger","10.4"]],[7,["Panther","10.3"]],[6,["Jaguar","10.2"]],[5,["Puma","10.1"]]]);const n=e=>{e=Number((e||s.release()).split(".")[0]);const[r,t]=o.get(e);return{name:r,version:t}};e.exports=n;e.exports.default=n},8560:e=>{"use strict";e.exports=function(e){try{return e()}catch(e){}}},467:(e,r,t)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});function _interopDefault(e){return e&&typeof e==="object"&&"default"in e?e["default"]:e}var s=_interopDefault(t(2413));var o=_interopDefault(t(8605));var n=_interopDefault(t(8835));var i=_interopDefault(t(7211));var a=_interopDefault(t(8761));const c=s.Readable;const p=Symbol("buffer");const l=Symbol("type");class Blob{constructor(){this[l]="";const e=arguments[0];const r=arguments[1];const t=[];let s=0;if(e){const r=e;const o=Number(r.length);for(let e=0;e<o;e++){const o=r[e];let n;if(o instanceof Buffer){n=o}else if(ArrayBuffer.isView(o)){n=Buffer.from(o.buffer,o.byteOffset,o.byteLength)}else if(o instanceof ArrayBuffer){n=Buffer.from(o)}else if(o instanceof Blob){n=o[p]}else{n=Buffer.from(typeof o==="string"?o:String(o))}s+=n.length;t.push(n)}}this[p]=Buffer.concat(t);let o=r&&r.type!==undefined&&String(r.type).toLowerCase();if(o&&!/[^\u0020-\u007E]/.test(o)){this[l]=o}}get size(){return this[p].length}get type(){return this[l]}text(){return Promise.resolve(this[p].toString())}arrayBuffer(){const e=this[p];const r=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return Promise.resolve(r)}stream(){const e=new c;e._read=function(){};e.push(this[p]);e.push(null);return e}toString(){return"[object Blob]"}slice(){const e=this.size;const r=arguments[0];const t=arguments[1];let s,o;if(r===undefined){s=0}else if(r<0){s=Math.max(e+r,0)}else{s=Math.min(r,e)}if(t===undefined){o=e}else if(t<0){o=Math.max(e+t,0)}else{o=Math.min(t,e)}const n=Math.max(o-s,0);const i=this[p];const a=i.slice(s,s+n);const c=new Blob([],{type:arguments[2]});c[p]=a;return c}}Object.defineProperties(Blob.prototype,{size:{enumerable:true},type:{enumerable:true},slice:{enumerable:true}});Object.defineProperty(Blob.prototype,Symbol.toStringTag,{value:"Blob",writable:false,enumerable:false,configurable:true});function FetchError(e,r,t){Error.call(this,e);this.message=e;this.type=r;if(t){this.code=this.errno=t.code}Error.captureStackTrace(this,this.constructor)}FetchError.prototype=Object.create(Error.prototype);FetchError.prototype.constructor=FetchError;FetchError.prototype.name="FetchError";let u;try{u=t(2877).convert}catch(e){}const d=Symbol("Body internals");const m=s.PassThrough;function Body(e){var r=this;var t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},o=t.size;let n=o===undefined?0:o;var i=t.timeout;let a=i===undefined?0:i;if(e==null){e=null}else if(isURLSearchParams(e)){e=Buffer.from(e.toString())}else if(isBlob(e))   ;else if(Buffer.isBuffer(e))   ;else if(Object.prototype.toString.call(e)==="[object ArrayBuffer]"){e=Buffer.from(e)}else if(ArrayBuffer.isView(e)){e=Buffer.from(e.buffer,e.byteOffset,e.byteLength)}else if(e instanceof s)   ;else{e=Buffer.from(String(e))}this[d]={body:e,disturbed:false,error:null};this.size=n;this.timeout=a;if(e instanceof s){e.on("error",function(e){const t=e.name==="AbortError"?e:new FetchError(`Invalid response body while trying to fetch ${r.url}: ${e.message}`,"system",e);r[d].error=t})}}Body.prototype={get body(){return this[d].body},get bodyUsed(){return this[d].disturbed},arrayBuffer(){return consumeBody.call(this).then(function(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)})},blob(){let e=this.headers&&this.headers.get("content-type")||"";return consumeBody.call(this).then(function(r){return Object.assign(new Blob([],{type:e.toLowerCase()}),{[p]:r})})},json(){var e=this;return consumeBody.call(this).then(function(r){try{return JSON.parse(r.toString())}catch(r){return Body.Promise.reject(new FetchError(`invalid json response body at ${e.url} reason: ${r.message}`,"invalid-json"))}})},text(){return consumeBody.call(this).then(function(e){return e.toString()})},buffer(){return consumeBody.call(this)},textConverted(){var e=this;return consumeBody.call(this).then(function(r){return convertBody(r,e.headers)})}};Object.defineProperties(Body.prototype,{body:{enumerable:true},bodyUsed:{enumerable:true},arrayBuffer:{enumerable:true},blob:{enumerable:true},json:{enumerable:true},text:{enumerable:true}});Body.mixIn=function(e){for(const r of Object.getOwnPropertyNames(Body.prototype)){if(!(r in e)){const t=Object.getOwnPropertyDescriptor(Body.prototype,r);Object.defineProperty(e,r,t)}}};function consumeBody(){var e=this;if(this[d].disturbed){return Body.Promise.reject(new TypeError(`body used already for: ${this.url}`))}this[d].disturbed=true;if(this[d].error){return Body.Promise.reject(this[d].error)}let r=this.body;if(r===null){return Body.Promise.resolve(Buffer.alloc(0))}if(isBlob(r)){r=r.stream()}if(Buffer.isBuffer(r)){return Body.Promise.resolve(r)}if(!(r instanceof s)){return Body.Promise.resolve(Buffer.alloc(0))}let t=[];let o=0;let n=false;return new Body.Promise(function(s,i){let a;if(e.timeout){a=setTimeout(function(){n=true;i(new FetchError(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,"body-timeout"))},e.timeout)}r.on("error",function(r){if(r.name==="AbortError"){n=true;i(r)}else{i(new FetchError(`Invalid response body while trying to fetch ${e.url}: ${r.message}`,"system",r))}});r.on("data",function(r){if(n||r===null){return}if(e.size&&o+r.length>e.size){n=true;i(new FetchError(`content size at ${e.url} over limit: ${e.size}`,"max-size"));return}o+=r.length;t.push(r)});r.on("end",function(){if(n){return}clearTimeout(a);try{s(Buffer.concat(t,o))}catch(r){i(new FetchError(`Could not create Buffer from response body for ${e.url}: ${r.message}`,"system",r))}})})}function convertBody(e,r){if(typeof u!=="function"){throw new Error("The package `encoding` must be installed to use the textConverted() function")}const t=r.get("content-type");let s="utf-8";let o,n;if(t){o=/charset=([^;]*)/i.exec(t)}n=e.slice(0,1024).toString();if(!o&&n){o=/<meta.+?charset=(['"])(.+?)\1/i.exec(n)}if(!o&&n){o=/<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(n);if(!o){o=/<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(n);if(o){o.pop()}}if(o){o=/charset=(.*)/i.exec(o.pop())}}if(!o&&n){o=/<\?xml.+?encoding=(['"])(.+?)\1/i.exec(n)}if(o){s=o.pop();if(s==="gb2312"||s==="gbk"){s="gb18030"}}return u(e,"UTF-8",s).toString()}function isURLSearchParams(e){if(typeof e!=="object"||typeof e.append!=="function"||typeof e.delete!=="function"||typeof e.get!=="function"||typeof e.getAll!=="function"||typeof e.has!=="function"||typeof e.set!=="function"){return false}return e.constructor.name==="URLSearchParams"||Object.prototype.toString.call(e)==="[object URLSearchParams]"||typeof e.sort==="function"}function isBlob(e){return typeof e==="object"&&typeof e.arrayBuffer==="function"&&typeof e.type==="string"&&typeof e.stream==="function"&&typeof e.constructor==="function"&&typeof e.constructor.name==="string"&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag])}function clone(e){let r,t;let o=e.body;if(e.bodyUsed){throw new Error("cannot clone body after it is used")}if(o instanceof s&&typeof o.getBoundary!=="function"){r=new m;t=new m;o.pipe(r);o.pipe(t);e[d].body=r;o=t}return o}function extractContentType(e){if(e===null){return null}else if(typeof e==="string"){return"text/plain;charset=UTF-8"}else if(isURLSearchParams(e)){return"application/x-www-form-urlencoded;charset=UTF-8"}else if(isBlob(e)){return e.type||null}else if(Buffer.isBuffer(e)){return null}else if(Object.prototype.toString.call(e)==="[object ArrayBuffer]"){return null}else if(ArrayBuffer.isView(e)){return null}else if(typeof e.getBoundary==="function"){return`multipart/form-data;boundary=${e.getBoundary()}`}else if(e instanceof s){return null}else{return"text/plain;charset=UTF-8"}}function getTotalBytes(e){const r=e.body;if(r===null){return 0}else if(isBlob(r)){return r.size}else if(Buffer.isBuffer(r)){return r.length}else if(r&&typeof r.getLengthSync==="function"){if(r._lengthRetrievers&&r._lengthRetrievers.length==0||r.hasKnownLength&&r.hasKnownLength()){return r.getLengthSync()}return null}else{return null}}function writeToStream(e,r){const t=r.body;if(t===null){e.end()}else if(isBlob(t)){t.stream().pipe(e)}else if(Buffer.isBuffer(t)){e.write(t);e.end()}else{t.pipe(e)}}Body.Promise=global.Promise;const f=/[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/;const g=/[^\t\x20-\x7e\x80-\xff]/;function validateName(e){e=`${e}`;if(f.test(e)||e===""){throw new TypeError(`${e} is not a legal HTTP header name`)}}function validateValue(e){e=`${e}`;if(g.test(e)){throw new TypeError(`${e} is not a legal HTTP header value`)}}function find(e,r){r=r.toLowerCase();for(const t in e){if(t.toLowerCase()===r){return t}}return undefined}const h=Symbol("map");class Headers{constructor(){let e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:undefined;this[h]=Object.create(null);if(e instanceof Headers){const r=e.raw();const t=Object.keys(r);for(const e of t){for(const t of r[e]){this.append(e,t)}}return}if(e==null)   ;else if(typeof e==="object"){const r=e[Symbol.iterator];if(r!=null){if(typeof r!=="function"){throw new TypeError("Header pairs must be iterable")}const t=[];for(const r of e){if(typeof r!=="object"||typeof r[Symbol.iterator]!=="function"){throw new TypeError("Each header pair must be iterable")}t.push(Array.from(r))}for(const e of t){if(e.length!==2){throw new TypeError("Each header pair must be a name/value tuple")}this.append(e[0],e[1])}}else{for(const r of Object.keys(e)){const t=e[r];this.append(r,t)}}}else{throw new TypeError("Provided initializer must be an object")}}get(e){e=`${e}`;validateName(e);const r=find(this[h],e);if(r===undefined){return null}return this[h][r].join(", ")}forEach(e){let r=arguments.length>1&&arguments[1]!==undefined?arguments[1]:undefined;let t=getHeaders(this);let s=0;while(s<t.length){var o=t[s];const n=o[0],i=o[1];e.call(r,i,n,this);t=getHeaders(this);s++}}set(e,r){e=`${e}`;r=`${r}`;validateName(e);validateValue(r);const t=find(this[h],e);this[h][t!==undefined?t:e]=[r]}append(e,r){e=`${e}`;r=`${r}`;validateName(e);validateValue(r);const t=find(this[h],e);if(t!==undefined){this[h][t].push(r)}else{this[h][e]=[r]}}has(e){e=`${e}`;validateName(e);return find(this[h],e)!==undefined}delete(e){e=`${e}`;validateName(e);const r=find(this[h],e);if(r!==undefined){delete this[h][r]}}raw(){return this[h]}keys(){return createHeadersIterator(this,"key")}values(){return createHeadersIterator(this,"value")}[Symbol.iterator](){return createHeadersIterator(this,"key+value")}}Headers.prototype.entries=Headers.prototype[Symbol.iterator];Object.defineProperty(Headers.prototype,Symbol.toStringTag,{value:"Headers",writable:false,enumerable:false,configurable:true});Object.defineProperties(Headers.prototype,{get:{enumerable:true},forEach:{enumerable:true},set:{enumerable:true},append:{enumerable:true},has:{enumerable:true},delete:{enumerable:true},keys:{enumerable:true},values:{enumerable:true},entries:{enumerable:true}});function getHeaders(e){let r=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"key+value";const t=Object.keys(e[h]).sort();return t.map(r==="key"?function(e){return e.toLowerCase()}:r==="value"?function(r){return e[h][r].join(", ")}:function(r){return[r.toLowerCase(),e[h][r].join(", ")]})}const T=Symbol("internal");function createHeadersIterator(e,r){const t=Object.create(w);t[T]={target:e,kind:r,index:0};return t}const w=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==w){throw new TypeError("Value of `this` is not a HeadersIterator")}var e=this[T];const r=e.target,t=e.kind,s=e.index;const o=getHeaders(r,t);const n=o.length;if(s>=n){return{value:undefined,done:true}}this[T].index=s+1;return{value:o[s],done:false}}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));Object.defineProperty(w,Symbol.toStringTag,{value:"HeadersIterator",writable:false,enumerable:false,configurable:true});function exportNodeCompatibleHeaders(e){const r=Object.assign({__proto__:null},e[h]);const t=find(e[h],"Host");if(t!==undefined){r[t]=r[t][0]}return r}function createHeadersLenient(e){const r=new Headers;for(const t of Object.keys(e)){if(f.test(t)){continue}if(Array.isArray(e[t])){for(const s of e[t]){if(g.test(s)){continue}if(r[h][t]===undefined){r[h][t]=[s]}else{r[h][t].push(s)}}}else if(!g.test(e[t])){r[h][t]=[e[t]]}}return r}const E=Symbol("Response internals");const b=o.STATUS_CODES;class Response{constructor(){let e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;let r=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};Body.call(this,e,r);const t=r.status||200;const s=new Headers(r.headers);if(e!=null&&!s.has("Content-Type")){const r=extractContentType(e);if(r){s.append("Content-Type",r)}}this[E]={url:r.url,status:t,statusText:r.statusText||b[t],headers:s,counter:r.counter}}get url(){return this[E].url||""}get status(){return this[E].status}get ok(){return this[E].status>=200&&this[E].status<300}get redirected(){return this[E].counter>0}get statusText(){return this[E].statusText}get headers(){return this[E].headers}clone(){return new Response(clone(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}}Body.mixIn(Response.prototype);Object.defineProperties(Response.prototype,{url:{enumerable:true},status:{enumerable:true},ok:{enumerable:true},redirected:{enumerable:true},statusText:{enumerable:true},headers:{enumerable:true},clone:{enumerable:true}});Object.defineProperty(Response.prototype,Symbol.toStringTag,{value:"Response",writable:false,enumerable:false,configurable:true});const v=Symbol("Request internals");const y=n.parse;const _=n.format;const P="destroy"in s.Readable.prototype;function isRequest(e){return typeof e==="object"&&typeof e[v]==="object"}function isAbortSignal(e){const r=e&&typeof e==="object"&&Object.getPrototypeOf(e);return!!(r&&r.constructor.name==="AbortSignal")}class Request{constructor(e){let r=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};let t;if(!isRequest(e)){if(e&&e.href){t=y(e.href)}else{t=y(`${e}`)}e={}}else{t=y(e.url)}let s=r.method||e.method||"GET";s=s.toUpperCase();if((r.body!=null||isRequest(e)&&e.body!==null)&&(s==="GET"||s==="HEAD")){throw new TypeError("Request with GET/HEAD method cannot have body")}let o=r.body!=null?r.body:isRequest(e)&&e.body!==null?clone(e):null;Body.call(this,o,{timeout:r.timeout||e.timeout||0,size:r.size||e.size||0});const n=new Headers(r.headers||e.headers||{});if(o!=null&&!n.has("Content-Type")){const e=extractContentType(o);if(e){n.append("Content-Type",e)}}let i=isRequest(e)?e.signal:null;if("signal"in r)i=r.signal;if(i!=null&&!isAbortSignal(i)){throw new TypeError("Expected signal to be an instanceof AbortSignal")}this[v]={method:s,redirect:r.redirect||e.redirect||"follow",headers:n,parsedURL:t,signal:i};this.follow=r.follow!==undefined?r.follow:e.follow!==undefined?e.follow:20;this.compress=r.compress!==undefined?r.compress:e.compress!==undefined?e.compress:true;this.counter=r.counter||e.counter||0;this.agent=r.agent||e.agent}get method(){return this[v].method}get url(){return _(this[v].parsedURL)}get headers(){return this[v].headers}get redirect(){return this[v].redirect}get signal(){return this[v].signal}clone(){return new Request(this)}}Body.mixIn(Request.prototype);Object.defineProperty(Request.prototype,Symbol.toStringTag,{value:"Request",writable:false,enumerable:false,configurable:true});Object.defineProperties(Request.prototype,{method:{enumerable:true},url:{enumerable:true},headers:{enumerable:true},redirect:{enumerable:true},clone:{enumerable:true},signal:{enumerable:true}});function getNodeRequestOptions(e){const r=e[v].parsedURL;const t=new Headers(e[v].headers);if(!t.has("Accept")){t.set("Accept","*/*")}if(!r.protocol||!r.hostname){throw new TypeError("Only absolute URLs are supported")}if(!/^https?:$/.test(r.protocol)){throw new TypeError("Only HTTP(S) protocols are supported")}if(e.signal&&e.body instanceof s.Readable&&!P){throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8")}let o=null;if(e.body==null&&/^(POST|PUT)$/i.test(e.method)){o="0"}if(e.body!=null){const r=getTotalBytes(e);if(typeof r==="number"){o=String(r)}}if(o){t.set("Content-Length",o)}if(!t.has("User-Agent")){t.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)")}if(e.compress&&!t.has("Accept-Encoding")){t.set("Accept-Encoding","gzip,deflate")}let n=e.agent;if(typeof n==="function"){n=n(r)}if(!t.has("Connection")&&!n){t.set("Connection","close")}return Object.assign({},r,{method:e.method,headers:exportNodeCompatibleHeaders(t),agent:n})}function AbortError(e){Error.call(this,e);this.type="aborted";this.message=e;Error.captureStackTrace(this,this.constructor)}AbortError.prototype=Object.create(Error.prototype);AbortError.prototype.constructor=AbortError;AbortError.prototype.name="AbortError";const O=s.PassThrough;const S=n.resolve;function fetch(e,r){if(!fetch.Promise){throw new Error("native promise missing, set fetch.Promise to your favorite alternative")}Body.Promise=fetch.Promise;return new fetch.Promise(function(t,n){const c=new Request(e,r);const p=getNodeRequestOptions(c);const l=(p.protocol==="https:"?i:o).request;const u=c.signal;let d=null;const m=function abort(){let e=new AbortError("The user aborted a request.");n(e);if(c.body&&c.body instanceof s.Readable){c.body.destroy(e)}if(!d||!d.body)return;d.body.emit("error",e)};if(u&&u.aborted){m();return}const f=function abortAndFinalize(){m();finalize()};const g=l(p);let h;if(u){u.addEventListener("abort",f)}function finalize(){g.abort();if(u)u.removeEventListener("abort",f);clearTimeout(h)}if(c.timeout){g.once("socket",function(e){h=setTimeout(function(){n(new FetchError(`network timeout at: ${c.url}`,"request-timeout"));finalize()},c.timeout)})}g.on("error",function(e){n(new FetchError(`request to ${c.url} failed, reason: ${e.message}`,"system",e));finalize()});g.on("response",function(e){clearTimeout(h);const r=createHeadersLenient(e.headers);if(fetch.isRedirect(e.statusCode)){const s=r.get("Location");const o=s===null?null:S(c.url,s);switch(c.redirect){case"error":n(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${c.url}`,"no-redirect"));finalize();return;case"manual":if(o!==null){try{r.set("Location",o)}catch(e){n(e)}}break;case"follow":if(o===null){break}if(c.counter>=c.follow){n(new FetchError(`maximum redirect reached at: ${c.url}`,"max-redirect"));finalize();return}const s={headers:new Headers(c.headers),follow:c.follow,counter:c.counter+1,agent:c.agent,compress:c.compress,method:c.method,body:c.body,signal:c.signal,timeout:c.timeout,size:c.size};if(e.statusCode!==303&&c.body&&getTotalBytes(c)===null){n(new FetchError("Cannot follow redirect with body being a readable stream","unsupported-redirect"));finalize();return}if(e.statusCode===303||(e.statusCode===301||e.statusCode===302)&&c.method==="POST"){s.method="GET";s.body=undefined;s.headers.delete("content-length")}t(fetch(new Request(o,s)));finalize();return}}e.once("end",function(){if(u)u.removeEventListener("abort",f)});let s=e.pipe(new O);const o={url:c.url,status:e.statusCode,statusText:e.statusMessage,headers:r,size:c.size,timeout:c.timeout,counter:c.counter};const i=r.get("Content-Encoding");if(!c.compress||c.method==="HEAD"||i===null||e.statusCode===204||e.statusCode===304){d=new Response(s,o);t(d);return}const p={flush:a.Z_SYNC_FLUSH,finishFlush:a.Z_SYNC_FLUSH};if(i=="gzip"||i=="x-gzip"){s=s.pipe(a.createGunzip(p));d=new Response(s,o);t(d);return}if(i=="deflate"||i=="x-deflate"){const r=e.pipe(new O);r.once("data",function(e){if((e[0]&15)===8){s=s.pipe(a.createInflate())}else{s=s.pipe(a.createInflateRaw())}d=new Response(s,o);t(d)});return}if(i=="br"&&typeof a.createBrotliDecompress==="function"){s=s.pipe(a.createBrotliDecompress());d=new Response(s,o);t(d);return}d=new Response(s,o);t(d)});writeToStream(g,c)})}fetch.isRedirect=function(e){return e===301||e===302||e===303||e===307||e===308};fetch.Promise=global.Promise;e.exports=r=fetch;Object.defineProperty(r,"__esModule",{value:true});r.default=r;r.Headers=Headers;r.Request=Request;r.Response=Response;r.FetchError=FetchError},502:(e,r,t)=>{"use strict";const s=t(5622);const o=t(539);e.exports=(e=>{e=Object.assign({cwd:process.cwd(),path:process.env[o()]},e);let r;let t=s.resolve(e.cwd);const n=[];while(r!==t){n.push(s.join(t,"node_modules/.bin"));r=t;t=s.resolve(t,"..")}n.push(s.dirname(process.execPath));return n.concat(e.path).join(s.delimiter)});e.exports.env=(r=>{r=Object.assign({env:process.env},r);const t=Object.assign({},r.env);const s=o({env:t});r.path=t[s];t[s]=e.exports(r);return t})},1223:(e,r,t)=>{var s=t(2940);e.exports=s(once);e.exports.strict=s(onceStrict);once.proto=once(function(){Object.defineProperty(Function.prototype,"once",{value:function(){return once(this)},configurable:true});Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return onceStrict(this)},configurable:true})});function once(e){var r=function(){if(r.called)return r.value;r.called=true;return r.value=e.apply(this,arguments)};r.called=false;return r}function onceStrict(e){var r=function(){if(r.called)throw new Error(r.onceError);r.called=true;return r.value=e.apply(this,arguments)};var t=e.name||"Function wrapped with `once`";r.onceError=t+" shouldn't be called more than once";r.called=false;return r}},4824:(e,r,t)=>{"use strict";const s=t(2087);const o=t(7493);const n=t(3515);const i=(e,r)=>{if(!e&&r){throw new Error("You can't specify a `release` without specifying `platform`")}e=e||s.platform();let t;if(e==="darwin"){if(!r&&s.platform()==="darwin"){r=s.release()}const e=r?Number(r.split(".")[0])>15?"macOS":"OS X":"macOS";t=r?o(r).name:"";return e+(t?" "+t:"")}if(e==="linux"){if(!r&&s.platform()==="linux"){r=s.release()}t=r?r.replace(/^(\d+\.\d+).*/,"$1"):"";return"Linux"+(t?" "+t:"")}if(e==="win32"){if(!r&&s.platform()==="win32"){r=s.release()}t=r?n(r):"";return"Windows"+(t?" "+t:"")}return e};e.exports=i},1330:e=>{"use strict";e.exports=((e,r)=>{r=r||(()=>{});return e.then(e=>new Promise(e=>{e(r())}).then(()=>e),e=>new Promise(e=>{e(r())}).then(()=>{throw e}))})},539:e=>{"use strict";e.exports=(e=>{e=e||{};const r=e.env||process.env;const t=e.platform||process.platform;if(t!=="win32"){return"PATH"}return Object.keys(r).find(e=>e.toUpperCase()==="PATH")||"Path"})},8341:(e,r,t)=>{var s=t(1223);var o=t(1205);var n=t(5747);var i=function(){};var a=/^v?\.0/.test(process.version);var c=function(e){return typeof e==="function"};var p=function(e){if(!a)return false;if(!n)return false;return(e instanceof(n.ReadStream||i)||e instanceof(n.WriteStream||i))&&c(e.close)};var l=function(e){return e.setHeader&&c(e.abort)};var u=function(e,r,t,n){n=s(n);var a=false;e.on("close",function(){a=true});o(e,{readable:r,writable:t},function(e){if(e)return n(e);a=true;n()});var u=false;return function(r){if(a)return;if(u)return;u=true;if(p(e))return e.close(i);if(l(e))return e.abort();if(c(e.destroy))return e.destroy();n(r||new Error("stream was destroyed"))}};var d=function(e){e()};var m=function(e,r){return e.pipe(r)};var f=function(){var e=Array.prototype.slice.call(arguments);var r=c(e[e.length-1]||i)&&e.pop()||i;if(Array.isArray(e[0]))e=e[0];if(e.length<2)throw new Error("pump requires two streams per minimum");var t;var s=e.map(function(o,n){var i=n<e.length-1;var a=n>0;return u(o,i,a,function(e){if(!t)t=e;if(e)s.forEach(d);if(i)return;s.forEach(d);r(t)})});return e.reduce(m)};e.exports=f},5911:(e,r)=>{r=e.exports=SemVer;var t;if(typeof process==="object"&&process.env&&process.env.NODE_DEBUG&&/\bsemver\b/i.test(process.env.NODE_DEBUG)){t=function(){var e=Array.prototype.slice.call(arguments,0);e.unshift("SEMVER");console.log.apply(console,e)}}else{t=function(){}}r.SEMVER_SPEC_VERSION="2.0.0";var s=256;var o=Number.MAX_SAFE_INTEGER||9007199254740991;var n=16;var i=r.re=[];var a=r.src=[];var c=0;var p=c++;a[p]="0|[1-9]\\d*";var l=c++;a[l]="[0-9]+";var u=c++;a[u]="\\d*[a-zA-Z-][a-zA-Z0-9-]*";var d=c++;a[d]="("+a[p]+")\\."+"("+a[p]+")\\."+"("+a[p]+")";var m=c++;a[m]="("+a[l]+")\\."+"("+a[l]+")\\."+"("+a[l]+")";var f=c++;a[f]="(?:"+a[p]+"|"+a[u]+")";var g=c++;a[g]="(?:"+a[l]+"|"+a[u]+")";var h=c++;a[h]="(?:-("+a[f]+"(?:\\."+a[f]+")*))";var T=c++;a[T]="(?:-?("+a[g]+"(?:\\."+a[g]+")*))";var w=c++;a[w]="[0-9A-Za-z-]+";var E=c++;a[E]="(?:\\+("+a[w]+"(?:\\."+a[w]+")*))";var b=c++;var v="v?"+a[d]+a[h]+"?"+a[E]+"?";a[b]="^"+v+"$";var y="[v=\\s]*"+a[m]+a[T]+"?"+a[E]+"?";var _=c++;a[_]="^"+y+"$";var P=c++;a[P]="((?:<|>)?=?)";var O=c++;a[O]=a[l]+"|x|X|\\*";var S=c++;a[S]=a[p]+"|x|X|\\*";var G=c++;a[G]="[v=\\s]*("+a[S]+")"+"(?:\\.("+a[S]+")"+"(?:\\.("+a[S]+")"+"(?:"+a[h]+")?"+a[E]+"?"+")?)?";var A=c++;a[A]="[v=\\s]*("+a[O]+")"+"(?:\\.("+a[O]+")"+"(?:\\.("+a[O]+")"+"(?:"+a[T]+")?"+a[E]+"?"+")?)?";var R=c++;a[R]="^"+a[P]+"\\s*"+a[G]+"$";var k=c++;a[k]="^"+a[P]+"\\s*"+a[A]+"$";var C=c++;a[C]="(?:^|[^\\d])"+"(\\d{1,"+n+"})"+"(?:\\.(\\d{1,"+n+"}))?"+"(?:\\.(\\d{1,"+n+"}))?"+"(?:$|[^\\d])";var F=c++;a[F]="(?:~>?)";var U=c++;a[U]="(\\s*)"+a[F]+"\\s+";i[U]=new RegExp(a[U],"g");var D="$1~";var x=c++;a[x]="^"+a[F]+a[G]+"$";var j=c++;a[j]="^"+a[F]+a[A]+"$";var L=c++;a[L]="(?:\\^)";var q=c++;a[q]="(\\s*)"+a[L]+"\\s+";i[q]=new RegExp(a[q],"g");var I="$1^";var H=c++;a[H]="^"+a[L]+a[G]+"$";var B=c++;a[B]="^"+a[L]+a[A]+"$";var N=c++;a[N]="^"+a[P]+"\\s*("+y+")$|^$";var $=c++;a[$]="^"+a[P]+"\\s*("+v+")$|^$";var W=c++;a[W]="(\\s*)"+a[P]+"\\s*("+y+"|"+a[G]+")";i[W]=new RegExp(a[W],"g");var z="$1$2$3";var V=c++;a[V]="^\\s*("+a[G]+")"+"\\s+-\\s+"+"("+a[G]+")"+"\\s*$";var K=c++;a[K]="^\\s*("+a[A]+")"+"\\s+-\\s+"+"("+a[A]+")"+"\\s*$";var J=c++;a[J]="(<|>)?=?\\s*\\*";for(var X=0;X<c;X++){t(X,a[X]);if(!i[X]){i[X]=new RegExp(a[X])}}r.parse=parse;function parse(e,r){if(!r||typeof r!=="object"){r={loose:!!r,includePrerelease:false}}if(e instanceof SemVer){return e}if(typeof e!=="string"){return null}if(e.length>s){return null}var t=r.loose?i[_]:i[b];if(!t.test(e)){return null}try{return new SemVer(e,r)}catch(e){return null}}r.valid=valid;function valid(e,r){var t=parse(e,r);return t?t.version:null}r.clean=clean;function clean(e,r){var t=parse(e.trim().replace(/^[=v]+/,""),r);return t?t.version:null}r.SemVer=SemVer;function SemVer(e,r){if(!r||typeof r!=="object"){r={loose:!!r,includePrerelease:false}}if(e instanceof SemVer){if(e.loose===r.loose){return e}else{e=e.version}}else if(typeof e!=="string"){throw new TypeError("Invalid Version: "+e)}if(e.length>s){throw new TypeError("version is longer than "+s+" characters")}if(!(this instanceof SemVer)){return new SemVer(e,r)}t("SemVer",e,r);this.options=r;this.loose=!!r.loose;var n=e.trim().match(r.loose?i[_]:i[b]);if(!n){throw new TypeError("Invalid Version: "+e)}this.raw=e;this.major=+n[1];this.minor=+n[2];this.patch=+n[3];if(this.major>o||this.major<0){throw new TypeError("Invalid major version")}if(this.minor>o||this.minor<0){throw new TypeError("Invalid minor version")}if(this.patch>o||this.patch<0){throw new TypeError("Invalid patch version")}if(!n[4]){this.prerelease=[]}else{this.prerelease=n[4].split(".").map(function(e){if(/^[0-9]+$/.test(e)){var r=+e;if(r>=0&&r<o){return r}}return e})}this.build=n[5]?n[5].split("."):[];this.format()}SemVer.prototype.format=function(){this.version=this.major+"."+this.minor+"."+this.patch;if(this.prerelease.length){this.version+="-"+this.prerelease.join(".")}return this.version};SemVer.prototype.toString=function(){return this.version};SemVer.prototype.compare=function(e){t("SemVer.compare",this.version,this.options,e);if(!(e instanceof SemVer)){e=new SemVer(e,this.options)}return this.compareMain(e)||this.comparePre(e)};SemVer.prototype.compareMain=function(e){if(!(e instanceof SemVer)){e=new SemVer(e,this.options)}return compareIdentifiers(this.major,e.major)||compareIdentifiers(this.minor,e.minor)||compareIdentifiers(this.patch,e.patch)};SemVer.prototype.comparePre=function(e){if(!(e instanceof SemVer)){e=new SemVer(e,this.options)}if(this.prerelease.length&&!e.prerelease.length){return-1}else if(!this.prerelease.length&&e.prerelease.length){return 1}else if(!this.prerelease.length&&!e.prerelease.length){return 0}var r=0;do{var s=this.prerelease[r];var o=e.prerelease[r];t("prerelease compare",r,s,o);if(s===undefined&&o===undefined){return 0}else if(o===undefined){return 1}else if(s===undefined){return-1}else if(s===o){continue}else{return compareIdentifiers(s,o)}}while(++r)};SemVer.prototype.inc=function(e,r){switch(e){case"premajor":this.prerelease.length=0;this.patch=0;this.minor=0;this.major++;this.inc("pre",r);break;case"preminor":this.prerelease.length=0;this.patch=0;this.minor++;this.inc("pre",r);break;case"prepatch":this.prerelease.length=0;this.inc("patch",r);this.inc("pre",r);break;case"prerelease":if(this.prerelease.length===0){this.inc("patch",r)}this.inc("pre",r);break;case"major":if(this.minor!==0||this.patch!==0||this.prerelease.length===0){this.major++}this.minor=0;this.patch=0;this.prerelease=[];break;case"minor":if(this.patch!==0||this.prerelease.length===0){this.minor++}this.patch=0;this.prerelease=[];break;case"patch":if(this.prerelease.length===0){this.patch++}this.prerelease=[];break;case"pre":if(this.prerelease.length===0){this.prerelease=[0]}else{var t=this.prerelease.length;while(--t>=0){if(typeof this.prerelease[t]==="number"){this.prerelease[t]++;t=-2}}if(t===-1){this.prerelease.push(0)}}if(r){if(this.prerelease[0]===r){if(isNaN(this.prerelease[1])){this.prerelease=[r,0]}}else{this.prerelease=[r,0]}}break;default:throw new Error("invalid increment argument: "+e)}this.format();this.raw=this.version;return this};r.inc=inc;function inc(e,r,t,s){if(typeof t==="string"){s=t;t=undefined}try{return new SemVer(e,t).inc(r,s).version}catch(e){return null}}r.diff=diff;function diff(e,r){if(eq(e,r)){return null}else{var t=parse(e);var s=parse(r);var o="";if(t.prerelease.length||s.prerelease.length){o="pre";var n="prerelease"}for(var i in t){if(i==="major"||i==="minor"||i==="patch"){if(t[i]!==s[i]){return o+i}}}return n}}r.compareIdentifiers=compareIdentifiers;var Z=/^[0-9]+$/;function compareIdentifiers(e,r){var t=Z.test(e);var s=Z.test(r);if(t&&s){e=+e;r=+r}return e===r?0:t&&!s?-1:s&&!t?1:e<r?-1:1}r.rcompareIdentifiers=rcompareIdentifiers;function rcompareIdentifiers(e,r){return compareIdentifiers(r,e)}r.major=major;function major(e,r){return new SemVer(e,r).major}r.minor=minor;function minor(e,r){return new SemVer(e,r).minor}r.patch=patch;function patch(e,r){return new SemVer(e,r).patch}r.compare=compare;function compare(e,r,t){return new SemVer(e,t).compare(new SemVer(r,t))}r.compareLoose=compareLoose;function compareLoose(e,r){return compare(e,r,true)}r.rcompare=rcompare;function rcompare(e,r,t){return compare(r,e,t)}r.sort=sort;function sort(e,t){return e.sort(function(e,s){return r.compare(e,s,t)})}r.rsort=rsort;function rsort(e,t){return e.sort(function(e,s){return r.rcompare(e,s,t)})}r.gt=gt;function gt(e,r,t){return compare(e,r,t)>0}r.lt=lt;function lt(e,r,t){return compare(e,r,t)<0}r.eq=eq;function eq(e,r,t){return compare(e,r,t)===0}r.neq=neq;function neq(e,r,t){return compare(e,r,t)!==0}r.gte=gte;function gte(e,r,t){return compare(e,r,t)>=0}r.lte=lte;function lte(e,r,t){return compare(e,r,t)<=0}r.cmp=cmp;function cmp(e,r,t,s){switch(r){case"===":if(typeof e==="object")e=e.version;if(typeof t==="object")t=t.version;return e===t;case"!==":if(typeof e==="object")e=e.version;if(typeof t==="object")t=t.version;return e!==t;case"":case"=":case"==":return eq(e,t,s);case"!=":return neq(e,t,s);case">":return gt(e,t,s);case">=":return gte(e,t,s);case"<":return lt(e,t,s);case"<=":return lte(e,t,s);default:throw new TypeError("Invalid operator: "+r)}}r.Comparator=Comparator;function Comparator(e,r){if(!r||typeof r!=="object"){r={loose:!!r,includePrerelease:false}}if(e instanceof Comparator){if(e.loose===!!r.loose){return e}else{e=e.value}}if(!(this instanceof Comparator)){return new Comparator(e,r)}t("comparator",e,r);this.options=r;this.loose=!!r.loose;this.parse(e);if(this.semver===Y){this.value=""}else{this.value=this.operator+this.semver.version}t("comp",this)}var Y={};Comparator.prototype.parse=function(e){var r=this.options.loose?i[N]:i[$];var t=e.match(r);if(!t){throw new TypeError("Invalid comparator: "+e)}this.operator=t[1];if(this.operator==="="){this.operator=""}if(!t[2]){this.semver=Y}else{this.semver=new SemVer(t[2],this.options.loose)}};Comparator.prototype.toString=function(){return this.value};Comparator.prototype.test=function(e){t("Comparator.test",e,this.options.loose);if(this.semver===Y){return true}if(typeof e==="string"){e=new SemVer(e,this.options)}return cmp(e,this.operator,this.semver,this.options)};Comparator.prototype.intersects=function(e,r){if(!(e instanceof Comparator)){throw new TypeError("a Comparator is required")}if(!r||typeof r!=="object"){r={loose:!!r,includePrerelease:false}}var t;if(this.operator===""){t=new Range(e.value,r);return satisfies(this.value,t,r)}else if(e.operator===""){t=new Range(this.value,r);return satisfies(e.semver,t,r)}var s=(this.operator===">="||this.operator===">")&&(e.operator===">="||e.operator===">");var o=(this.operator==="<="||this.operator==="<")&&(e.operator==="<="||e.operator==="<");var n=this.semver.version===e.semver.version;var i=(this.operator===">="||this.operator==="<=")&&(e.operator===">="||e.operator==="<=");var a=cmp(this.semver,"<",e.semver,r)&&((this.operator===">="||this.operator===">")&&(e.operator==="<="||e.operator==="<"));var c=cmp(this.semver,">",e.semver,r)&&((this.operator==="<="||this.operator==="<")&&(e.operator===">="||e.operator===">"));return s||o||n&&i||a||c};r.Range=Range;function Range(e,r){if(!r||typeof r!=="object"){r={loose:!!r,includePrerelease:false}}if(e instanceof Range){if(e.loose===!!r.loose&&e.includePrerelease===!!r.includePrerelease){return e}else{return new Range(e.raw,r)}}if(e instanceof Comparator){return new Range(e.value,r)}if(!(this instanceof Range)){return new Range(e,r)}this.options=r;this.loose=!!r.loose;this.includePrerelease=!!r.includePrerelease;this.raw=e;this.set=e.split(/\s*\|\|\s*/).map(function(e){return this.parseRange(e.trim())},this).filter(function(e){return e.length});if(!this.set.length){throw new TypeError("Invalid SemVer Range: "+e)}this.format()}Range.prototype.format=function(){this.range=this.set.map(function(e){return e.join(" ").trim()}).join("||").trim();return this.range};Range.prototype.toString=function(){return this.range};Range.prototype.parseRange=function(e){var r=this.options.loose;e=e.trim();var s=r?i[K]:i[V];e=e.replace(s,hyphenReplace);t("hyphen replace",e);e=e.replace(i[W],z);t("comparator trim",e,i[W]);e=e.replace(i[U],D);e=e.replace(i[q],I);e=e.split(/\s+/).join(" ");var o=r?i[N]:i[$];var n=e.split(" ").map(function(e){return parseComparator(e,this.options)},this).join(" ").split(/\s+/);if(this.options.loose){n=n.filter(function(e){return!!e.match(o)})}n=n.map(function(e){return new Comparator(e,this.options)},this);return n};Range.prototype.intersects=function(e,r){if(!(e instanceof Range)){throw new TypeError("a Range is required")}return this.set.some(function(t){return t.every(function(t){return e.set.some(function(e){return e.every(function(e){return t.intersects(e,r)})})})})};r.toComparators=toComparators;function toComparators(e,r){return new Range(e,r).set.map(function(e){return e.map(function(e){return e.value}).join(" ").trim().split(" ")})}function parseComparator(e,r){t("comp",e,r);e=replaceCarets(e,r);t("caret",e);e=replaceTildes(e,r);t("tildes",e);e=replaceXRanges(e,r);t("xrange",e);e=replaceStars(e,r);t("stars",e);return e}function isX(e){return!e||e.toLowerCase()==="x"||e==="*"}function replaceTildes(e,r){return e.trim().split(/\s+/).map(function(e){return replaceTilde(e,r)}).join(" ")}function replaceTilde(e,r){var s=r.loose?i[j]:i[x];return e.replace(s,function(r,s,o,n,i){t("tilde",e,r,s,o,n,i);var a;if(isX(s)){a=""}else if(isX(o)){a=">="+s+".0.0 <"+(+s+1)+".0.0"}else if(isX(n)){a=">="+s+"."+o+".0 <"+s+"."+(+o+1)+".0"}else if(i){t("replaceTilde pr",i);a=">="+s+"."+o+"."+n+"-"+i+" <"+s+"."+(+o+1)+".0"}else{a=">="+s+"."+o+"."+n+" <"+s+"."+(+o+1)+".0"}t("tilde return",a);return a})}function replaceCarets(e,r){return e.trim().split(/\s+/).map(function(e){return replaceCaret(e,r)}).join(" ")}function replaceCaret(e,r){t("caret",e,r);var s=r.loose?i[B]:i[H];return e.replace(s,function(r,s,o,n,i){t("caret",e,r,s,o,n,i);var a;if(isX(s)){a=""}else if(isX(o)){a=">="+s+".0.0 <"+(+s+1)+".0.0"}else if(isX(n)){if(s==="0"){a=">="+s+"."+o+".0 <"+s+"."+(+o+1)+".0"}else{a=">="+s+"."+o+".0 <"+(+s+1)+".0.0"}}else if(i){t("replaceCaret pr",i);if(s==="0"){if(o==="0"){a=">="+s+"."+o+"."+n+"-"+i+" <"+s+"."+o+"."+(+n+1)}else{a=">="+s+"."+o+"."+n+"-"+i+" <"+s+"."+(+o+1)+".0"}}else{a=">="+s+"."+o+"."+n+"-"+i+" <"+(+s+1)+".0.0"}}else{t("no pr");if(s==="0"){if(o==="0"){a=">="+s+"."+o+"."+n+" <"+s+"."+o+"."+(+n+1)}else{a=">="+s+"."+o+"."+n+" <"+s+"."+(+o+1)+".0"}}else{a=">="+s+"."+o+"."+n+" <"+(+s+1)+".0.0"}}t("caret return",a);return a})}function replaceXRanges(e,r){t("replaceXRanges",e,r);return e.split(/\s+/).map(function(e){return replaceXRange(e,r)}).join(" ")}function replaceXRange(e,r){e=e.trim();var s=r.loose?i[k]:i[R];return e.replace(s,function(r,s,o,n,i,a){t("xRange",e,r,s,o,n,i,a);var c=isX(o);var p=c||isX(n);var l=p||isX(i);var u=l;if(s==="="&&u){s=""}if(c){if(s===">"||s==="<"){r="<0.0.0"}else{r="*"}}else if(s&&u){if(p){n=0}i=0;if(s===">"){s=">=";if(p){o=+o+1;n=0;i=0}else{n=+n+1;i=0}}else if(s==="<="){s="<";if(p){o=+o+1}else{n=+n+1}}r=s+o+"."+n+"."+i}else if(p){r=">="+o+".0.0 <"+(+o+1)+".0.0"}else if(l){r=">="+o+"."+n+".0 <"+o+"."+(+n+1)+".0"}t("xRange return",r);return r})}function replaceStars(e,r){t("replaceStars",e,r);return e.trim().replace(i[J],"")}function hyphenReplace(e,r,t,s,o,n,i,a,c,p,l,u,d){if(isX(t)){r=""}else if(isX(s)){r=">="+t+".0.0"}else if(isX(o)){r=">="+t+"."+s+".0"}else{r=">="+r}if(isX(c)){a=""}else if(isX(p)){a="<"+(+c+1)+".0.0"}else if(isX(l)){a="<"+c+"."+(+p+1)+".0"}else if(u){a="<="+c+"."+p+"."+l+"-"+u}else{a="<="+a}return(r+" "+a).trim()}Range.prototype.test=function(e){if(!e){return false}if(typeof e==="string"){e=new SemVer(e,this.options)}for(var r=0;r<this.set.length;r++){if(testSet(this.set[r],e,this.options)){return true}}return false};function testSet(e,r,s){for(var o=0;o<e.length;o++){if(!e[o].test(r)){return false}}if(r.prerelease.length&&!s.includePrerelease){for(o=0;o<e.length;o++){t(e[o].semver);if(e[o].semver===Y){continue}if(e[o].semver.prerelease.length>0){var n=e[o].semver;if(n.major===r.major&&n.minor===r.minor&&n.patch===r.patch){return true}}}return false}return true}r.satisfies=satisfies;function satisfies(e,r,t){try{r=new Range(r,t)}catch(e){return false}return r.test(e)}r.maxSatisfying=maxSatisfying;function maxSatisfying(e,r,t){var s=null;var o=null;try{var n=new Range(r,t)}catch(e){return null}e.forEach(function(e){if(n.test(e)){if(!s||o.compare(e)===-1){s=e;o=new SemVer(s,t)}}});return s}r.minSatisfying=minSatisfying;function minSatisfying(e,r,t){var s=null;var o=null;try{var n=new Range(r,t)}catch(e){return null}e.forEach(function(e){if(n.test(e)){if(!s||o.compare(e)===1){s=e;o=new SemVer(s,t)}}});return s}r.minVersion=minVersion;function minVersion(e,r){e=new Range(e,r);var t=new SemVer("0.0.0");if(e.test(t)){return t}t=new SemVer("0.0.0-0");if(e.test(t)){return t}t=null;for(var s=0;s<e.set.length;++s){var o=e.set[s];o.forEach(function(e){var r=new SemVer(e.semver.version);switch(e.operator){case">":if(r.prerelease.length===0){r.patch++}else{r.prerelease.push(0)}r.raw=r.format();case"":case">=":if(!t||gt(t,r)){t=r}break;case"<":case"<=":break;default:throw new Error("Unexpected operation: "+e.operator)}})}if(t&&e.test(t)){return t}return null}r.validRange=validRange;function validRange(e,r){try{return new Range(e,r).range||"*"}catch(e){return null}}r.ltr=ltr;function ltr(e,r,t){return outside(e,r,"<",t)}r.gtr=gtr;function gtr(e,r,t){return outside(e,r,">",t)}r.outside=outside;function outside(e,r,t,s){e=new SemVer(e,s);r=new Range(r,s);var o,n,i,a,c;switch(t){case">":o=gt;n=lte;i=lt;a=">";c=">=";break;case"<":o=lt;n=gte;i=gt;a="<";c="<=";break;default:throw new TypeError('Must provide a hilo val of "<" or ">"')}if(satisfies(e,r,s)){return false}for(var p=0;p<r.set.length;++p){var l=r.set[p];var u=null;var d=null;l.forEach(function(e){if(e.semver===Y){e=new Comparator(">=0.0.0")}u=u||e;d=d||e;if(o(e.semver,u.semver,s)){u=e}else if(i(e.semver,d.semver,s)){d=e}});if(u.operator===a||u.operator===c){return false}if((!d.operator||d.operator===a)&&n(e,d.semver)){return false}else if(d.operator===c&&i(e,d.semver)){return false}}return true}r.prerelease=prerelease;function prerelease(e,r){var t=parse(e,r);return t&&t.prerelease.length?t.prerelease:null}r.intersects=intersects;function intersects(e,r,t){e=new Range(e,t);r=new Range(r,t);return e.intersects(r)}r.coerce=coerce;function coerce(e){if(e instanceof SemVer){return e}if(typeof e!=="string"){return null}var r=e.match(i[C]);if(r==null){return null}return parse(r[1]+"."+(r[2]||"0")+"."+(r[3]||"0"))}},7032:(e,r,t)=>{"use strict";var s=t(2638);e.exports=function(e){var r=e.match(s);if(!r){return null}var t=r[0].replace(/#! ?/,"").split(" ");var o=t[0].split("/").pop();var n=t[1];return o==="env"?n:o+(n?" "+n:"")}},2638:e=>{"use strict";e.exports=/^#!.*/},4931:(e,r,t)=>{var s=t(2357);var o=t(3710);var n=/^win/i.test(process.platform);var i=t(8614);if(typeof i!=="function"){i=i.EventEmitter}var a;if(process.__signal_exit_emitter__){a=process.__signal_exit_emitter__}else{a=process.__signal_exit_emitter__=new i;a.count=0;a.emitted={}}if(!a.infinite){a.setMaxListeners(Infinity);a.infinite=true}e.exports=function(e,r){s.equal(typeof e,"function","a callback must be provided for exit handler");if(p===false){load()}var t="exit";if(r&&r.alwaysLast){t="afterexit"}var o=function(){a.removeListener(t,e);if(a.listeners("exit").length===0&&a.listeners("afterexit").length===0){unload()}};a.on(t,e);return o};e.exports.unload=unload;function unload(){if(!p){return}p=false;o.forEach(function(e){try{process.removeListener(e,c[e])}catch(e){}});process.emit=u;process.reallyExit=l;a.count-=1}function emit(e,r,t){if(a.emitted[e]){return}a.emitted[e]=true;a.emit(e,r,t)}var c={};o.forEach(function(e){c[e]=function listener(){var r=process.listeners(e);if(r.length===a.count){unload();emit("exit",null,e);emit("afterexit",null,e);if(n&&e==="SIGHUP"){e="SIGINT"}process.kill(process.pid,e)}}});e.exports.signals=function(){return o};e.exports.load=load;var p=false;function load(){if(p){return}p=true;a.count+=1;o=o.filter(function(e){try{process.on(e,c[e]);return true}catch(e){return false}});process.emit=processEmit;process.reallyExit=processReallyExit}var l=process.reallyExit;function processReallyExit(e){process.exitCode=e||0;emit("exit",process.exitCode,null);emit("afterexit",process.exitCode,null);l.call(process,process.exitCode)}var u=process.emit;function processEmit(e,r){if(e==="exit"){if(r!==undefined){process.exitCode=r}var t=u.apply(this,arguments);emit("exit",process.exitCode,null);emit("afterexit",process.exitCode,null);return t}else{return u.apply(this,arguments)}}},3710:e=>{e.exports=["SIGABRT","SIGALRM","SIGHUP","SIGINT","SIGTERM"];if(process.platform!=="win32"){e.exports.push("SIGVTALRM","SIGXCPU","SIGXFSZ","SIGUSR2","SIGTRAP","SIGSYS","SIGQUIT","SIGIOT")}if(process.platform==="linux"){e.exports.push("SIGIO","SIGPOLL","SIGPWR","SIGSTKFLT","SIGUNUSED")}},5515:e=>{"use strict";e.exports=function(e){var r=typeof e==="string"?"\n":"\n".charCodeAt();var t=typeof e==="string"?"\r":"\r".charCodeAt();if(e[e.length-1]===r){e=e.slice(0,e.length-1)}if(e[e.length-1]===t){e=e.slice(0,e.length-1)}return e}},4294:(e,r,t)=>{e.exports=t(4219)},4219:(e,r,t)=>{"use strict";var s=t(1631);var o=t(4016);var n=t(8605);var i=t(7211);var a=t(8614);var c=t(2357);var p=t(1669);r.httpOverHttp=httpOverHttp;r.httpsOverHttp=httpsOverHttp;r.httpOverHttps=httpOverHttps;r.httpsOverHttps=httpsOverHttps;function httpOverHttp(e){var r=new TunnelingAgent(e);r.request=n.request;return r}function httpsOverHttp(e){var r=new TunnelingAgent(e);r.request=n.request;r.createSocket=createSecureSocket;r.defaultPort=443;return r}function httpOverHttps(e){var r=new TunnelingAgent(e);r.request=i.request;return r}function httpsOverHttps(e){var r=new TunnelingAgent(e);r.request=i.request;r.createSocket=createSecureSocket;r.defaultPort=443;return r}function TunnelingAgent(e){var r=this;r.options=e||{};r.proxyOptions=r.options.proxy||{};r.maxSockets=r.options.maxSockets||n.Agent.defaultMaxSockets;r.requests=[];r.sockets=[];r.on("free",function onFree(e,t,s,o){var n=toOptions(t,s,o);for(var i=0,a=r.requests.length;i<a;++i){var c=r.requests[i];if(c.host===n.host&&c.port===n.port){r.requests.splice(i,1);c.request.onSocket(e);return}}e.destroy();r.removeSocket(e)})}p.inherits(TunnelingAgent,a.EventEmitter);TunnelingAgent.prototype.addRequest=function addRequest(e,r,t,s){var o=this;var n=mergeOptions({request:e},o.options,toOptions(r,t,s));if(o.sockets.length>=this.maxSockets){o.requests.push(n);return}o.createSocket(n,function(r){r.on("free",onFree);r.on("close",onCloseOrRemove);r.on("agentRemove",onCloseOrRemove);e.onSocket(r);function onFree(){o.emit("free",r,n)}function onCloseOrRemove(e){o.removeSocket(r);r.removeListener("free",onFree);r.removeListener("close",onCloseOrRemove);r.removeListener("agentRemove",onCloseOrRemove)}})};TunnelingAgent.prototype.createSocket=function createSocket(e,r){var t=this;var s={};t.sockets.push(s);var o=mergeOptions({},t.proxyOptions,{method:"CONNECT",path:e.host+":"+e.port,agent:false,headers:{host:e.host+":"+e.port}});if(e.localAddress){o.localAddress=e.localAddress}if(o.proxyAuth){o.headers=o.headers||{};o.headers["Proxy-Authorization"]="Basic "+new Buffer(o.proxyAuth).toString("base64")}l("making CONNECT request");var n=t.request(o);n.useChunkedEncodingByDefault=false;n.once("response",onResponse);n.once("upgrade",onUpgrade);n.once("connect",onConnect);n.once("error",onError);n.end();function onResponse(e){e.upgrade=true}function onUpgrade(e,r,t){process.nextTick(function(){onConnect(e,r,t)})}function onConnect(o,i,a){n.removeAllListeners();i.removeAllListeners();if(o.statusCode!==200){l("tunneling socket could not be established, statusCode=%d",o.statusCode);i.destroy();var c=new Error("tunneling socket could not be established, "+"statusCode="+o.statusCode);c.code="ECONNRESET";e.request.emit("error",c);t.removeSocket(s);return}if(a.length>0){l("got illegal response body from proxy");i.destroy();var c=new Error("got illegal response body from proxy");c.code="ECONNRESET";e.request.emit("error",c);t.removeSocket(s);return}l("tunneling connection has established");t.sockets[t.sockets.indexOf(s)]=i;return r(i)}function onError(r){n.removeAllListeners();l("tunneling socket could not be established, cause=%s\n",r.message,r.stack);var o=new Error("tunneling socket could not be established, "+"cause="+r.message);o.code="ECONNRESET";e.request.emit("error",o);t.removeSocket(s)}};TunnelingAgent.prototype.removeSocket=function removeSocket(e){var r=this.sockets.indexOf(e);if(r===-1){return}this.sockets.splice(r,1);var t=this.requests.shift();if(t){this.createSocket(t,function(e){t.request.onSocket(e)})}};function createSecureSocket(e,r){var t=this;TunnelingAgent.prototype.createSocket.call(t,e,function(s){var n=e.request.getHeader("host");var i=mergeOptions({},t.options,{socket:s,servername:n?n.replace(/:.*$/,""):e.host});var a=o.connect(0,i);t.sockets[t.sockets.indexOf(s)]=a;r(a)})}function toOptions(e,r,t){if(typeof e==="string"){return{host:e,port:r,localAddress:t}}return e}function mergeOptions(e){for(var r=1,t=arguments.length;r<t;++r){var s=arguments[r];if(typeof s==="object"){var o=Object.keys(s);for(var n=0,i=o.length;n<i;++n){var a=o[n];if(s[a]!==undefined){e[a]=s[a]}}}}return e}var l;if(process.env.NODE_DEBUG&&/\btunnel\b/.test(process.env.NODE_DEBUG)){l=function(){var e=Array.prototype.slice.call(arguments);if(typeof e[0]==="string"){e[0]="TUNNEL: "+e[0]}else{e.unshift("TUNNEL:")}console.error.apply(console,e)}}else{l=function(){}}r.debug=l},5030:(e,r)=>{"use strict";Object.defineProperty(r,"__esModule",{value:true});function getUserAgent(){if(typeof navigator==="object"&&"userAgent"in navigator){return navigator.userAgent}if(typeof process==="object"&&"version"in process){return`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`}return"<environment undetectable>"}r.getUserAgent=getUserAgent},4207:(e,r,t)=>{e.exports=which;which.sync=whichSync;var s=process.platform==="win32"||process.env.OSTYPE==="cygwin"||process.env.OSTYPE==="msys";var o=t(5622);var n=s?";":":";var i=t(7126);function getNotFoundError(e){var r=new Error("not found: "+e);r.code="ENOENT";return r}function getPathInfo(e,r){var t=r.colon||n;var o=r.path||process.env.PATH||"";var i=[""];o=o.split(t);var a="";if(s){o.unshift(process.cwd());a=r.pathExt||process.env.PATHEXT||".EXE;.CMD;.BAT;.COM";i=a.split(t);if(e.indexOf(".")!==-1&&i[0]!=="")i.unshift("")}if(e.match(/\//)||s&&e.match(/\\/))o=[""];return{env:o,ext:i,extExe:a}}function which(e,r,t){if(typeof r==="function"){t=r;r={}}var s=getPathInfo(e,r);var n=s.env;var a=s.ext;var c=s.extExe;var p=[];(function F(s,l){if(s===l){if(r.all&&p.length)return t(null,p);else return t(getNotFoundError(e))}var u=n[s];if(u.charAt(0)==='"'&&u.slice(-1)==='"')u=u.slice(1,-1);var d=o.join(u,e);if(!u&&/^\.[\\\/]/.test(e)){d=e.slice(0,2)+d}(function E(e,o){if(e===o)return F(s+1,l);var n=a[e];i(d+n,{pathExt:c},function(s,i){if(!s&&i){if(r.all)p.push(d+n);else return t(null,d+n)}return E(e+1,o)})})(0,a.length)})(0,n.length)}function whichSync(e,r){r=r||{};var t=getPathInfo(e,r);var s=t.env;var n=t.ext;var a=t.extExe;var c=[];for(var p=0,l=s.length;p<l;p++){var u=s[p];if(u.charAt(0)==='"'&&u.slice(-1)==='"')u=u.slice(1,-1);var d=o.join(u,e);if(!u&&/^\.[\\\/]/.test(e)){d=e.slice(0,2)+d}for(var m=0,f=n.length;m<f;m++){var g=d+n[m];var h;try{h=i.sync(g,{pathExt:a});if(h){if(r.all)c.push(g);else return g}}catch(e){}}}if(r.all&&c.length)return c;if(r.nothrow)return null;throw getNotFoundError(e)}},3515:(e,r,t)=>{"use strict";const s=t(2087);const o=t(5447);const n=new Map([["10.0","10"],["6.3","8.1"],["6.2","8"],["6.1","7"],["6.0","Vista"],["5.2","Server 2003"],["5.1","XP"],["5.0","2000"],["4.9","ME"],["4.1","98"],["4.0","95"]]);const i=e=>{const r=/\d+\.\d/.exec(e||s.release());if(e&&!r){throw new Error("`release` argument doesn't match `n.n`")}const t=(r||[])[0];if((!e||e===s.release())&&["6.1","6.2","6.3","10.0"].includes(t)){let e;try{e=o.sync("wmic",["os","get","Caption"]).stdout||""}catch(r){e=o.sync("powershell",["(Get-CimInstance -ClassName Win32_OperatingSystem).caption"]).stdout||""}const r=(e.match(/2008|2012|2016|2019/)||[])[0];if(r){return`Server ${r}`}}return n.get(t)};e.exports=i},2940:e=>{e.exports=wrappy;function wrappy(e,r){if(e&&r)return wrappy(e)(r);if(typeof e!=="function")throw new TypeError("need wrapper function");Object.keys(e).forEach(function(r){wrapper[r]=e[r]});return wrapper;function wrapper(){var r=new Array(arguments.length);for(var t=0;t<r.length;t++){r[t]=arguments[t]}var s=e.apply(this,r);var o=r[r.length-1];if(typeof s==="function"&&s!==o){Object.keys(o).forEach(function(e){s[e]=o[e]})}return s}}},2877:module=>{module.exports=eval("require")("encoding")},2357:e=>{"use strict";e.exports=require("assert")},3129:e=>{"use strict";e.exports=require("child_process")},8614:e=>{"use strict";e.exports=require("events")},5747:e=>{"use strict";e.exports=require("fs")},8605:e=>{"use strict";e.exports=require("http")},7211:e=>{"use strict";e.exports=require("https")},1631:e=>{"use strict";e.exports=require("net")},2087:e=>{"use strict";e.exports=require("os")},5622:e=>{"use strict";e.exports=require("path")},2413:e=>{"use strict";e.exports=require("stream")},4016:e=>{"use strict";e.exports=require("tls")},8835:e=>{"use strict";e.exports=require("url")},1669:e=>{"use strict";e.exports=require("util")},8761:e=>{"use strict";e.exports=require("zlib")}};var __webpack_module_cache__={};function __webpack_require__(e){if(__webpack_module_cache__[e]){return __webpack_module_cache__[e].exports}var r=__webpack_module_cache__[e]={exports:{}};var t=true;try{__webpack_modules__[e].call(r.exports,r,r.exports,__webpack_require__);t=false}finally{if(t)delete __webpack_module_cache__[e]}return r.exports}(()=>{__webpack_require__.r=(e=>{if(typeof Symbol!=="undefined"&&Symbol.toStringTag){Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}Object.defineProperty(e,"__esModule",{value:true})})})();__webpack_require__.ab=__dirname+"/";return __webpack_require__(6821)})();